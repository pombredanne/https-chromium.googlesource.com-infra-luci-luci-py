{
  "comments": [
    {
      "key": {
        "uuid": "e2945f84_fab3129e",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 11
      },
      "lineNbr": 225,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-09T18:49:53Z",
      "side": 1,
      "message": "This is a non-transactional call, it means there\u0027ll be duplicated tasks when the outer transaction is retried.",
      "range": {
        "startLine": 225,
        "startChar": 10,
        "endLine": 225,
        "endChar": 54
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca69c3e2_e878f02c",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 11
      },
      "lineNbr": 225,
      "author": {
        "id": 1336288
      },
      "writtenOn": "2019-07-09T19:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2945f84_fab3129e",
      "range": {
        "startLine": 225,
        "startChar": 10,
        "endLine": 225,
        "endChar": 54
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9132ae90_4ce0524b",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 11
      },
      "lineNbr": 227,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-09T18:49:53Z",
      "side": 1,
      "message": "This is an approximation and it may lag behind the real state. It\u0027s not intended to be used in online processing. So be aware that the queue may blow up or behave erratically when deployed. If it\u0027s indeed so, I think you should consider using named tasks, they are deduped (e.g. we can use the current timestamp with 1 sec precision to ensure there is at most 1 task per second enqueued). One caveat is that named tasks can\u0027t be used inside transactions (so we\u0027ll have to enqueue a nameless task that then enqueues named one). Another option is to use memcache somehow, but this doesn\u0027t work within transactions either.",
      "range": {
        "startLine": 227,
        "startChar": 4,
        "endLine": 227,
        "endChar": 64
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fed6df3_3bf76f65",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 11
      },
      "lineNbr": 227,
      "author": {
        "id": 1336288
      },
      "writtenOn": "2019-07-09T19:38:37Z",
      "side": 1,
      "message": "Hi, \n\nYes, I am aware of its lag. We do not care about the kicker queue\u0027s depth unless it grows to indefinite. We set the limit L to 600, so unless the lag is longer than 10 minute, it won\u0027t impact us. The actual queue size may exceed the limit. The worst case may be Q*lag+L, Q is RPS.\nGiven Q is 100, lag is 60(1 min lag), the kicker queue may reach to 6000 + 600 \u003d 6600. But I think this is still safe to us, as kicker is an empty task and it does not consume much storage.",
      "parentUuid": "9132ae90_4ce0524b",
      "range": {
        "startLine": 227,
        "startChar": 4,
        "endLine": 227,
        "endChar": 64
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02938e9d_2a61b94e",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 11
      },
      "lineNbr": 227,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-09T22:44:02Z",
      "side": 1,
      "message": "Ok, but I still think it is not a good design. It is wasteful and relies on APIs without any timing guarantees (for example, nothing forbids stats.tasks to get stuck at e.g. 100 for a long time, GAE doesn\u0027t give any promises about how up-to-date the value is).\n\nBut I don\u0027t want to block you, feel free to ignore this comment.",
      "parentUuid": "9fed6df3_3bf76f65",
      "range": {
        "startLine": 227,
        "startChar": 4,
        "endLine": 227,
        "endChar": 64
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c14253d1_da0f49f2",
        "filename": "appengine/swarming/server/external_scheduler_test.py",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1336288
      },
      "writtenOn": "2019-07-09T18:24:21Z",
      "side": 1,
      "message": "I want to verify if all the tasks in the pull queue were deleted here. But I found to do so we have to wait till the lease expired(60s). To make it faster and more straightforward, use taskqueue.QueueStatistics instead.",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 43
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b0b99db_e5b48d50",
        "filename": "appengine/swarming/server/external_scheduler_test.py",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-07-09T18:26:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c14253d1_da0f49f2",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 43
      },
      "revId": "97757b6e725b87931f7ea556d1ff613c96afc802",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}