{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17c61f21_e9b82cf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-02-15T03:35:47Z",
      "side": 1,
      "message": "Please stamp again, I\u0027ve added tests.",
      "revId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38ac9516_2cd1a0e1",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 5
      },
      "lineNbr": 1323,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-02-15T03:43:17Z",
      "side": 1,
      "message": "I realized there may be temporary \"tremors\" when bot\u0027s config changes since we cache configs in memory on the backend side and there\u0027s no synchronization between cache expiration across different processes:\n\n1. The bot\u0027s request hits process A, which has new config and tells bot \"use RBE now!!111\".\n2. The bot obeys and switches into RBE mode.\n3. It polls RBE and discovers there are no tasks there.\n4. It needs to report this to Swarming. It calls \u0027/bots/poll\u0027 again. This happens within seconds from (1).\n5. The bot\u0027s request hits process B now, which still has the old config cached. It tells bot \"don\u0027t use RBE!!11\".\n6. The bot disables RBE :-/\n\nI think we\u0027ll need to add some \"hysteresis\" to bot config changes on the backend side by storing the latest config and when it was picked up in BotInfo entity and refusing to update it if the last modification time is too soon (which means we might be trying to update it based on stale cached config).\n\nI\u0027ll do it after confirming it happens.",
      "range": {
        "startLine": 1320,
        "startChar": 0,
        "endLine": 1323,
        "endChar": 35
      },
      "revId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d5f828f_3c2ea464",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 5
      },
      "lineNbr": 1323,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2023-02-17T22:00:45Z",
      "side": 1,
      "message": "Makes sense... Could we version the config somehow, so it marches forward?",
      "parentUuid": "38ac9516_2cd1a0e1",
      "range": {
        "startLine": 1320,
        "startChar": 0,
        "endLine": 1323,
        "endChar": 35
      },
      "revId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82f677df_eacb00d7",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 5
      },
      "lineNbr": 1323,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-02-17T22:05:20Z",
      "side": 1,
      "message": "Potentially, but this will likely need to happen on LUCI Config side. All other places are just caching layers on top of LUCI Config data (i.e. if they are flushed we\u0027ll lose the version identifier as well).",
      "parentUuid": "8d5f828f_3c2ea464",
      "range": {
        "startLine": 1320,
        "startChar": 0,
        "endLine": 1323,
        "endChar": 35
      },
      "revId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f5392f9f8454136572449609e1ec77a63bf92366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}