{
  "comments": [
    {
      "key": {
        "uuid": "6f95dbaa_3f39009f",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-17T22:49:09Z",
      "side": 1,
      "message": "imo it would be cleaner if it didn\u0027t make changes to partial, but made the changes locally, i.e. in local variables",
      "range": {
        "startLine": 216,
        "startChar": 60,
        "endLine": 217,
        "endChar": 53
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595aa92f_fe71900f",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2018-07-17T23:40:23Z",
      "side": 1,
      "message": "It would be more costly, since merging dicts is recursive. We\u0027d need to deep copy everything. partial is always module-internal so I think it\u0027s okay.",
      "parentUuid": "6f95dbaa_3f39009f",
      "range": {
        "startLine": 216,
        "startChar": 60,
        "endLine": 217,
        "endChar": 53
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "849fbab2_85de5a31",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-18T17:53:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "595aa92f_fe71900f",
      "range": {
        "startLine": 216,
        "startChar": 60,
        "endLine": 217,
        "endChar": 53
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf507d88_cad0f180",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-17T22:49:09Z",
      "side": 1,
      "message": "this mutates response parameter. This behavior is not documented. L237 implies that you intend to make an in-place change. Why return the param then?",
      "range": {
        "startLine": 233,
        "startChar": 6,
        "endLine": 233,
        "endChar": 23
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2d73b43_5a05eb1b",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2018-07-17T23:40:23Z",
      "side": 1,
      "message": "It\u0027s documented on line 215 as \"to be updated in place\". As for why return it, for convenience. Depending on how the caller is using it, returning it could be useful. See mask below. Without returning it would be more lines:\ndef mask(response, fields):\n  _apply(response, _parse(fields))\n  return response\n\nSame argument for having mask modify in place and also return.",
      "parentUuid": "cf507d88_cad0f180",
      "range": {
        "startLine": 233,
        "startChar": 6,
        "endLine": 233,
        "endChar": 23
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf2fe411_784bb642",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-18T17:53:44Z",
      "side": 1,
      "message": "sorry, i forgot to adjust this comment after noticing that indeed this is documented.\n\nre returns: this is stylistic preference, so ok",
      "parentUuid": "b2d73b43_5a05eb1b",
      "range": {
        "startLine": 233,
        "startChar": 6,
        "endLine": 233,
        "endChar": 23
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b2a48fc_b914ca7b",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-17T22:49:09Z",
      "side": 1,
      "message": "what if it was empty intentionally, from the start?\n\nsame in L252",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 240,
        "endChar": 27
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c3503cc_59bb5a71",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2018-07-17T23:40:23Z",
      "side": 1,
      "message": "The adapter uses the protorpc library to generate the JSON, and that library doesn\u0027t include empty repeated fields:\nhttps://github.com/google/protorpc/blob/master/protorpc/protojson.py#L118\n\nThis shouldn\u0027t be used to mask arbitrary JSON, but I\u0027ve added a check so that we only recurse if the value is non-empty in the first place so it does something vaguely sensible if given arbitrary JSON.",
      "parentUuid": "2b2a48fc_b914ca7b",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 240,
        "endChar": 27
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00a46fb0_d75b2e01",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-18T17:53:44Z",
      "side": 1,
      "message": "in general, if this code is not intended to run on arbitrary dicts, please document mask() accordingly. Currently it look generic, like it would work for any dicts",
      "parentUuid": "6c3503cc_59bb5a71",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 240,
        "endChar": 27
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20b06d16_0ff1ddc0",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-07-17T22:49:09Z",
      "side": 1,
      "message": "what if it was an empty list?",
      "range": {
        "startLine": 257,
        "startChar": 7,
        "endLine": 259,
        "endChar": 27
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86a0da65_08a61afe",
        "filename": "appengine/components/components/endpoints_webapp2/partial.py",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1003211
      },
      "writtenOn": "2018-07-17T23:40:23Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "20b06d16_0ff1ddc0",
      "range": {
        "startLine": 257,
        "startChar": 7,
        "endLine": 259,
        "endChar": 27
      },
      "revId": "c2faa0bf85d9af0707f2e39c6c6e9ecc113fd41c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}