{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4498142d_17b14551",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1115868
      },
      "writtenOn": "2023-06-20T03:09:00Z",
      "side": 1,
      "message": "This is a bit of a guess at what is happening in bug 1456212. The behavior is consistent with the new cipd package being present in the cache index, but the cache data missing on disk. I do not know how it would have gotten into this state though (on 3 different bots, no less)",
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f012f510_8e7af64d",
        "filename": "client/run_isolated.py",
        "patchSetId": 6
      },
      "lineNbr": 1156,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-06-20T05:12:47Z",
      "side": 1,
      "message": "Is this still necessary? How does it relate to cipd_version_cache and cipd_instane_cache?",
      "range": {
        "startLine": 1156,
        "startChar": 69,
        "endLine": 1156,
        "endChar": 78
      },
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ed0f51_2cd16b1b",
        "filename": "client/run_isolated.py",
        "patchSetId": 6
      },
      "lineNbr": 1156,
      "author": {
        "id": 1115868
      },
      "writtenOn": "2023-06-20T05:25:33Z",
      "side": 1,
      "message": "Yeah, it\u0027s confusing and I\u0027m just guessing a bit what the intent was.\n\ncache_dir seems to be a top-level working directory; it is used here both to create a \u0027bin\u0027 directory for the cipd binary to be installed to, and then for a \u0027cache\u0027 directory which is the actual cache managed by the cipd client (see comment below).",
      "parentUuid": "f012f510_8e7af64d",
      "range": {
        "startLine": 1156,
        "startChar": 69,
        "endLine": 1156,
        "endChar": 78
      },
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71531723_df6595b8",
        "filename": "client/run_isolated.py",
        "patchSetId": 6
      },
      "lineNbr": 1182,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-06-20T05:12:47Z",
      "side": 1,
      "message": "please update",
      "range": {
        "startLine": 1182,
        "startChar": 2,
        "endLine": 1182,
        "endChar": 6
      },
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30d257f5_b2307f34",
        "filename": "client/run_isolated.py",
        "patchSetId": 6
      },
      "lineNbr": 1595,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-06-20T05:12:47Z",
      "side": 1,
      "message": "I don\u0027t think this would work. CIPD instance cache directory is managed by CIPD client and it is structured differently from cache directories managed by Swarming bot. _clean_cmd wouldn\u0027t know what to do with it.",
      "range": {
        "startLine": 1595,
        "startChar": 3,
        "endLine": 1595,
        "endChar": 38
      },
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a592c282_c5a3b16b",
        "filename": "client/run_isolated.py",
        "patchSetId": 6
      },
      "lineNbr": 1595,
      "author": {
        "id": 1115868
      },
      "writtenOn": "2023-06-20T05:25:33Z",
      "side": 1,
      "message": "As I understand it, this is not the cache managed by the CIPD client, but is rather a cache of instances of the CIPD package itself (managed by cipd.py)\n\nIt is an instance of DiskContentAddressedCache just like the other ones added to `caches`.",
      "parentUuid": "30d257f5_b2307f34",
      "range": {
        "startLine": 1595,
        "startChar": 3,
        "endLine": 1595,
        "endChar": 38
      },
      "revId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a4fd57fa1d1df6922c54a4b82ddf4adbff31a48b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}