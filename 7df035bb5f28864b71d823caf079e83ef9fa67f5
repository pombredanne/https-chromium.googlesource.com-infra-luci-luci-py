{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c531e7f6_a1693e1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-03-31T07:49:05Z",
      "side": 1,
      "message": "I think it is better to fix caller to use text type everywhere.",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "605a6786_7f950ce8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2021-03-31T08:17:29Z",
      "side": 1,
      "message": "I think this is safer as it can prevent unexpected issues, too.\nCan you elaborate the pros of the approach?",
      "parentUuid": "c531e7f6_a1693e1d",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630ca292_32ce821f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-03-31T08:36:28Z",
      "side": 1,
      "message": "If we use six.ensure_*, then it makes difficult to find which type are used there. And six is temporal solution, we anyway want to use only str or bytes there to remove six usage.\nSo I think it is better to stick to text type explicitly here.\ndigest is not needed to be bytes in the function.",
      "parentUuid": "605a6786_7f950ce8",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "617298a4_903c15de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2021-03-31T14:09:00Z",
      "side": 1,
      "message": "\u003e If we use six.ensure_*, then it makes difficult to find which type are used there. \n\nI agree that it would be confusing if six.ensure_* is used in a ad-hoc manner. \n\nBut the code protects the inside of ContentAddressedCache by ensuring the digest is in text type at public APIs. `defensive programming` may be a similar concept.\ngo/dbc-course-defensive\n\nIf it\u0027s only for Python3, I would write like\n```\nif isinstance(digest, binary_type):\n  digest \u003d digest.decode()\n```\n\nI understand that this isn\u0027t ideal. but I think it\u0027s efficient in this situation.\n\n\u003e And six is temporal solution, we anyway want to use only str or bytes there to remove six usage.\n\nI don\u0027t know if it\u0027s worth cleaning six, though. The next big change would be migration to foundry bot code (or other Go based code).\n\n\u003e digest is not needed to be bytes in the function.\n\nI agree this. That\u0027s why I added six.ensure_text there.",
      "parentUuid": "630ca292_32ce821f",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca9a0329_185dc944",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2021-03-31T14:11:55Z",
      "side": 1,
      "message": "\u003e if isinstance(digest, binary_type):\n\nErr \"if isinstance(digest, bytes)\".",
      "parentUuid": "617298a4_903c15de",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c037937_1a9d87a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-04-01T06:05:47Z",
      "side": 1,
      "message": "I still think using six.ensure_* here is not good.\nIf we need to be defensive and avoid fixing type, we need to use six.ensure_* everywhere eventually.\n\nBut I rather want to fix from root cause. I also want to keep codebase cleaner even if we know that this will be thrown away as that won\u0027t happen soon.",
      "parentUuid": "ca9a0329_185dc944",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8deeeac8_29463afe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2021-04-01T06:22:26Z",
      "side": 1,
      "message": "The point is not to do type check and conversion everywhere, but only at API boundaries.\nBut Ok. I will follow the direction unless this becomes cumbersome.",
      "parentUuid": "0c037937_1a9d87a7",
      "revId": "7df035bb5f28864b71d823caf079e83ef9fa67f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}