{
  "comments": [
    {
      "key": {
        "uuid": "3e9da6a6_62fd9b10",
        "filename": "client/run_isolated.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-22T19:20:18Z",
      "side": 1,
      "message": "Does this work if item is None?",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 519,
        "endChar": 37
      },
      "revId": "0310a6ab7663964a6abe1ccc3a79de0fc28a502b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d461ec2_c3066d29",
        "filename": "client/run_isolated.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-22T20:11:58Z",
      "side": 1,
      "message": "I still don\u0027t understand why an item argument is needed at all. The caller should do these two.",
      "parentUuid": "3e9da6a6_62fd9b10",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 519,
        "endChar": 37
      },
      "revId": "0310a6ab7663964a6abe1ccc3a79de0fc28a502b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ace8f867_8a26198f",
        "filename": "client/run_isolated.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-23T00:16:05Z",
      "side": 1,
      "message": "Just to avoid cut-and-pasting it to line 539 as well, but if you feel strongly we can change it - your call.",
      "parentUuid": "1d461ec2_c3066d29",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 519,
        "endChar": 37
      },
      "revId": "0310a6ab7663964a6abe1ccc3a79de0fc28a502b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0837130_e697b977",
        "filename": "client/run_isolated.py",
        "patchSetId": 2
      },
      "lineNbr": 521,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-22T19:20:18Z",
      "side": 1,
      "message": "recursively?",
      "range": {
        "startLine": 521,
        "startChar": 46,
        "endLine": 521,
        "endChar": 62
      },
      "revId": "0310a6ab7663964a6abe1ccc3a79de0fc28a502b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f275e0e_a2dc5f5a",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 2
      },
      "lineNbr": 966,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-22T19:56:07Z",
      "side": 1,
      "message": "Instead of one big test, you can create several:\n\n  * Normal file\n  * Symlink to file\n  * Symlink to symlink to file\n  * Symlink to [symlink to] directory\n  * Broken symlink\n  * Symlink to broken symlink\n  * Directory contains symlink to file in its parent\n  * Symlink to a directory\u0027s parent (what will happen!?)\n\nI\u0027m sure you can come up with more!\n\nIdeally, you\u0027ll also be able to confirm that the failures are logged. If you can\u0027t do it automatically, but the logs are printed to stdout/stderr, you can mention in a comment somewhere that you verified manually that they\u0027re being printed out.",
      "range": {
        "startLine": 966,
        "startChar": 6,
        "endLine": 966,
        "endChar": 18
      },
      "revId": "0310a6ab7663964a6abe1ccc3a79de0fc28a502b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}