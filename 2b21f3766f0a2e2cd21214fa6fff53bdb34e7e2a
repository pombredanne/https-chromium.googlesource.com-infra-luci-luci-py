{
  "comments": [
    {
      "key": {
        "uuid": "b726445e_9d840bae",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2018-03-09T23:22:13Z",
      "side": 1,
      "message": "For future friendliness it would be better to have top-level \"dimensions\" key, so we can add more stuff there if we must.\n\n{\n  \"dimensions\": {\n    \"foo\": [\"bar\"]\n  }\n}\n\nAlso, let\u0027s silently skip keys that start with \"__comment\" (or something). JSON sucks :(",
      "range": {
        "startLine": 313,
        "startChar": 23,
        "endLine": 313,
        "endChar": 37
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94fcb9c_a003360b",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1002225
      },
      "writtenOn": "2018-03-10T01:55:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b726445e_9d840bae",
      "range": {
        "startLine": 313,
        "startChar": 23,
        "endLine": 313,
        "endChar": 37
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0ce720c_07535488",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 315,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2018-03-09T23:22:13Z",
      "side": 1,
      "message": "This is not necessary, _IGNORED_DIMENSIONS is to exclude some dimensions from monitoring metrics.",
      "range": {
        "startLine": 314,
        "startChar": 6,
        "endLine": 315,
        "endChar": 16
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d2076c1_5a8c9732",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 315,
      "author": {
        "id": 1002225
      },
      "writtenOn": "2018-03-10T01:55:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0ce720c_07535488",
      "range": {
        "startLine": 314,
        "startChar": 6,
        "endLine": 315,
        "endChar": 16
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e60fc43b_74294eef",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2018-03-09T23:22:13Z",
      "side": 1,
      "message": "why? config_dir should always be in botobj, and it is never None",
      "range": {
        "startLine": 332,
        "startChar": 4,
        "endLine": 332,
        "endChar": 43
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23ce2634_72fbb0c8",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1002225
      },
      "writtenOn": "2018-03-10T01:55:54Z",
      "side": 1,
      "message": "Some tests seem to be passing None botobj which causes the test to fail.",
      "parentUuid": "e60fc43b_74294eef",
      "range": {
        "startLine": 332,
        "startChar": 4,
        "endLine": 332,
        "endChar": 43
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c22db390_d76cb76d",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2018-03-09T23:22:13Z",
      "side": 1,
      "message": "This thing should be wrapped in try:except and exceptions logged, but otherwise ignored. Alternatively we can quarantine the bot if the file is present, but invalid.\n\nWe should also stop silently ignoring non-conformant fields in dimensions.json and raise ValueError exception instead.",
      "range": {
        "startLine": 333,
        "startChar": 17,
        "endLine": 333,
        "endChar": 46
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7395f1dc_628d995b",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main.py",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1002225
      },
      "writtenOn": "2018-03-10T01:55:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c22db390_d76cb76d",
      "range": {
        "startLine": 333,
        "startChar": 17,
        "endLine": 333,
        "endChar": 46
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daa1a8b2_f3351ae2",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main_test.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2018-03-09T23:22:13Z",
      "side": 1,
      "message": "We usually use real files in a temp directory, and mock paths to them. Looks like self.root_dir is already a temp directory (see line 58), so just create and directory and a file there and mock botobj.config_dir to point to the directory.",
      "range": {
        "startLine": 185,
        "startChar": 4,
        "endLine": 185,
        "endChar": 40
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2deaee03_cd9f88f3",
        "filename": "appengine/swarming/swarming_bot/bot_code/bot_main_test.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1002225
      },
      "writtenOn": "2018-03-10T01:55:54Z",
      "side": 1,
      "message": "I tried that but couldn\u0027t figure out how to mock the botobj.config_dir property, self.mock doesn\u0027t seem to work with properties.",
      "parentUuid": "daa1a8b2_f3351ae2",
      "range": {
        "startLine": 185,
        "startChar": 4,
        "endLine": 185,
        "endChar": 40
      },
      "revId": "2b21f3766f0a2e2cd21214fa6fff53bdb34e7e2a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}