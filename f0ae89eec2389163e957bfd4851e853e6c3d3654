{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "393459c2_8d069da4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-08T02:53:25Z",
      "side": 1,
      "message": "PTAL\n\nI also deployed this to chromium-swarm-dev, seems to be working:\n\n```\nPollState token:\nid: \"e3b2d5e5-6545-4144-9533-9bb8b408a036\"\nexpiry {\n  seconds: 1670471455\n  nanos: 858006000\n}\nrbe_instance: \"projects/chromium-swarm-dev/instances/default_instance\"\nenforced_dimensions {\n  key: \"id\"\n  values: \"dev-infra-rbe-bionic-0-d48e\"\n}\nenforced_dimensions {\n  key: \"pool\"\n  values: \"infra.loadtest.rbe\"\n}\ndebug_info {\n  created {\n    seconds: 1670467855\n    nanos: 858006000\n  }\n  swarming_version: \"6922-22066df-vadimsh-generate-poll-token\"\n  request_id: \"639150fe00ff09f9fe906931fa0001737e6368726f6d69756d2d737761726d2d6465760001363932322d323230363664662d766164696d73682d67656e65726174652d706f6c6c2d746f6b656e00010122\"\n}\ngce_auth {\n  gce_project: \"google.com:chromecompute\"\n  gce_instance: \"dev-infra-rbe-bionic-0-d48e\"\n}\n```",
      "revId": "f0ae89eec2389163e957bfd4851e853e6c3d3654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27694953_2dc475d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1547372
      },
      "writtenOn": "2022-12-08T20:09:38Z",
      "side": 1,
      "message": "LGTM!\n\nJust wanted to make sure I understand this - the purpose of the token is to prove to the `go server` that the bot, at some point, did authenticate to a `swarming server` and got instructions to talk to `rbe`?",
      "revId": "f0ae89eec2389163e957bfd4851e853e6c3d3654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc4af28b_c222e3a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-08T20:14:42Z",
      "side": 1,
      "message": "Yes. The go server will verify the HMAC on the token (thus checking it was produced by the python server). It then will look at the credentials bot presented and will verify the match the requirements stored in PollState (thus checking it is the same exact bot talking to the Go server as the one that requested the token). It then will use RBE instance ID and `dimensions` in the token to construct parameters for the RBE call. This prevents a compromised bot from talking to a different RBE instance or pretend to be a different bot or be in a different pool.",
      "parentUuid": "27694953_2dc475d2",
      "revId": "f0ae89eec2389163e957bfd4851e853e6c3d3654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aab5db1e_e251dd9e",
        "filename": "appengine/swarming/server/rbe.py",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-08T02:53:25Z",
      "side": 1,
      "message": "this is primarily useful for tests, since in tests calling app_identity.get_application_id() during module loading time is not allowed (the app_identity mock is not initialized yet at this point). So instead of defining the global variable with the secret, there\u0027s a function that lazy initializes it on first call.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 12
      },
      "revId": "f0ae89eec2389163e957bfd4851e853e6c3d3654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}