{
  "comments": [
    {
      "key": {
        "uuid": "845512c3_e0f46200",
        "filename": "appengine/components/components/config/proto/service_config.proto",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-06-25T20:58:10Z",
      "side": 1,
      "message": "Should we accelerate the conversion of current python services from cloud endpoints to pRPC instead? I already told Erik this needs to happen eventually and for Swarming this may be done this quarter anyway.",
      "range": {
        "startLine": 92,
        "startChar": 51,
        "endLine": 92,
        "endChar": 78
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abd954e5_e53f54b1",
        "filename": "appengine/components/components/config/proto/service_config.proto",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-06-26T06:38:51Z",
      "side": 1,
      "message": "I don\u0027t know how that would work for services that are not in the infra repository, and don\u0027t already use prpc. The Chromeperf Dashboard does not use any of the existing LUCI components as far as I can tell, and doing so will be much more work than just using whatever GCP provides natively.",
      "parentUuid": "845512c3_e0f46200",
      "range": {
        "startLine": 92,
        "startChar": 51,
        "endLine": 92,
        "endChar": 78
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b2ee79e_5374bfca",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-06-25T17:10:10Z",
      "side": 1,
      "message": "Where this library is coming from? As in, won\u0027t it break existing apps because they don\u0027t have this dependency?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a013ad_99120b22",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-06-26T06:38:51Z",
      "side": 1,
      "message": "Oh, right -- I hadn\u0027t realised that this was embedded in other apps.\n\nThis is the google-auth library, (pip install google-auth) which is the recommended/supported way for authorising requests to Google APIs.",
      "parentUuid": "0b2ee79e_5374bfca",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76e8cfa6_6d0609a8",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-06-25T17:10:10Z",
      "side": 1,
      "message": "Tokens with empty audience is of limited usability. Cloud Endpoint 2 is the only platform I\u0027m aware of that accepts them. Other Google APIs that accept JWTs:\n  * Firebase wants \"https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit\" (https://firebase.google.com/docs/auth/admin/create-custom-tokens).\n  * Cloud IoT wants Cloud Project ID (https://cloud.google.com/iot/docs/how-tos/credentials/jwts).\n  * Other Google APIs want \"https://oauth2.googleapis.com/token\" (https://github.com/golang/oauth2/blob/master/jwt/jwt.go#L101 and https://github.com/golang/oauth2/blob/master/google/google.go#L125).\n\nSo I think either audience should be made configurable here or this code should be moved from generic net.py into a more specific luci-config code that explicitly mentions this would work only with Cloud Endpoints v2.",
      "range": {
        "startLine": 218,
        "startChar": 18,
        "endLine": 218,
        "endChar": 27
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984a2d84_d7e7f9c0",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-06-26T06:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76e8cfa6_6d0609a8",
      "range": {
        "startLine": 218,
        "startChar": 18,
        "endLine": 218,
        "endChar": 27
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7075cf_b079fbfd",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 278,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-06-25T17:10:10Z",
      "side": 1,
      "message": "Please move this to request_async instead (not only JSON requests need authorization tokens) and make it raise ValueError if both use_jwt_auth and (scopes or project_id) are used (they both try to write \u0027Authorization\u0027 header).",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 278,
        "endChar": 64
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b787c88_68025a2a",
        "filename": "appengine/components/components/net.py",
        "patchSetId": 5
      },
      "lineNbr": 278,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-06-26T06:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e7075cf_b079fbfd",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 278,
        "endChar": 64
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68ff2e34_62a68007",
        "filename": "appengine/components/components/net_test.py",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-06-25T17:10:10Z",
      "side": 1,
      "message": "These arguments are for generating OAuth access tokens. They should be incompatible with JWTs (we can\u0027t put both OAuth access token and JWT into single \"Authorization\" header).",
      "range": {
        "startLine": 230,
        "startChar": 8,
        "endLine": 231,
        "endChar": 66
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7c055a_eacbc57a",
        "filename": "appengine/config_service/services.py",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-06-25T17:10:10Z",
      "side": 1,
      "message": "this should be \n  scopes\u003dNone if service.use_jwt_auth else net.EMAIL_SCOPE",
      "range": {
        "startLine": 88,
        "startChar": 30,
        "endLine": 88,
        "endChar": 52
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6c1fff3_78612686",
        "filename": "appengine/config_service/services.py",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-06-26T06:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d7c055a_eacbc57a",
      "range": {
        "startLine": 88,
        "startChar": 30,
        "endLine": 88,
        "endChar": 52
      },
      "revId": "37fa4183431f662ea8ccd01f3af179b25bddc700",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}