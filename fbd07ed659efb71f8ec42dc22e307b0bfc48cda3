{
  "comments": [
    {
      "key": {
        "uuid": "a09f644f_f543f165",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-15T00:45:23Z",
      "side": 1,
      "message": "Do you know why the error wasn\u0027t caught by unittest?",
      "range": {
        "startLine": 216,
        "startChar": 33,
        "endLine": 216,
        "endChar": 52
      },
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "981083ac_9da45731",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-09-15T00:58:15Z",
      "side": 1,
      "message": "Not enough coverage in external_scheduler_test.py?",
      "parentUuid": "a09f644f_f543f165",
      "range": {
        "startLine": 216,
        "startChar": 33,
        "endLine": 216,
        "endChar": 52
      },
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241bf85f_2ffe3f16",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-09-15T01:03:43Z",
      "side": 1,
      "message": "Ah! It actually got caught by my new assert but the ndb unit testing library doesn\u0027t test for it by default. Will upload another patchset shortly",
      "parentUuid": "981083ac_9da45731",
      "range": {
        "startLine": 216,
        "startChar": 33,
        "endLine": 216,
        "endChar": 52
      },
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6dc3a4_5e13e1ea",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1306,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-15T00:45:23Z",
      "side": 1,
      "message": "Instead of doing this, how about having a helper append_root_task() or something, and call it at BQ exports?",
      "range": {
        "startLine": 1306,
        "startChar": 26,
        "endLine": 1306,
        "endChar": 46
      },
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0ad99f9_d297c9b1",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1306,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-09-15T00:58:15Z",
      "side": 1,
      "message": "That\u0027s an option, but I added an assert instead.",
      "parentUuid": "fa6dc3a4_5e13e1ea",
      "range": {
        "startLine": 1306,
        "startChar": 26,
        "endLine": 1306,
        "endChar": 46
      },
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9540899_eb840631",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1344,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-15T00:30:28Z",
      "side": 1,
      "message": "can we use ndb.in_transaction() ?",
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de5862da_42de884f",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1344,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-09-15T00:41:33Z",
      "side": 1,
      "message": "I prefer the behavior to be explicit. It makes the system as a whole easier to understand. Otherwise one could be wondering why sometimes the root_task_id value gets set or not, it wouldn\u0027t be obvious. As such I \"recommend against\", but if you prefer I don\u0027t mind.",
      "parentUuid": "b9540899_eb840631",
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b26aab_1bbb8296",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1344,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-15T00:45:07Z",
      "side": 1,
      "message": "I see.",
      "parentUuid": "de5862da_42de884f",
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "886b497c_fa905529",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1344,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-09-15T00:58:15Z",
      "side": 1,
      "message": "Added asserts; now it\u0027s both explicit and verified at runtime.",
      "parentUuid": "de5862da_42de884f",
      "revId": "fbd07ed659efb71f8ec42dc22e307b0bfc48cda3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}