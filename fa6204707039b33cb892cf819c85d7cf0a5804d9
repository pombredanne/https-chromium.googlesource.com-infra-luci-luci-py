{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d2bdb98d_564ed595",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-10T00:09:54Z",
      "side": 1,
      "message": "+vadimsh",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af0b7ea5_13b90c3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-20T19:38:45Z",
      "side": 1,
      "message": "tl;dr: Migrating to https://crrev.com/c/3328924\n\nI originally uploaded this CL with `git push` instead of `git cl upload` (oops), and Gerrit seems to forbid updating CLs with `git push`. So I\u0027ve created a new CL with the updated patch set, using `git cl upload` instead. See https://crrev.com/c/3328924",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b70ba45b_cd1e42d5",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-12-10T05:35:44Z",
      "side": 1,
      "message": "this is not used?",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2765fc1c_0b6de27f",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T18:53:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b70ba45b_cd1e42d5",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0baa5ce1_1c401d45",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-12-10T05:35:44Z",
      "side": 1,
      "message": "project id",
      "range": {
        "startLine": 159,
        "startChar": 16,
        "endLine": 159,
        "endChar": 18
      },
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d5e7bf3_e4eb5332",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-12-10T05:35:44Z",
      "side": 1,
      "message": "topic id",
      "range": {
        "startLine": 159,
        "startChar": 28,
        "endLine": 159,
        "endChar": 30
      },
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56b54e46_35570aaf",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T18:53:58Z",
      "side": 1,
      "message": "Done, and replicated in proto/api/swarming.proto (from which I copied this comment)",
      "parentUuid": "8d5e7bf3_e4eb5332",
      "range": {
        "startLine": 159,
        "startChar": 28,
        "endLine": 159,
        "endChar": 30
      },
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a18101f0_6a1aa20f",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T18:53:58Z",
      "side": 1,
      "message": "Done, and replicated in proto/api/swarming.proto (from which I copied this comment)",
      "parentUuid": "0baa5ce1_1c401d45",
      "range": {
        "startLine": 159,
        "startChar": 16,
        "endLine": 159,
        "endChar": 18
      },
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eea0d8b_7bf483ee",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2021-12-10T05:35:44Z",
      "side": 1,
      "message": "have an empty line above?",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0beffb0_5646ed85",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T18:53:58Z",
      "side": 1,
      "message": "Obsolete, since in the latest patch set this message only has one field.",
      "parentUuid": "3eea0d8b_7bf483ee",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f60ebc38_74d9164d",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-09T21:53:05Z",
      "side": 1,
      "message": "I think it would be better to just rely on pubsub ACLs for this. This auth_token wouldn\u0027t serve much purpose here because it would be committed to the infradata repo and thus visible to a bunch of people.",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe67f152_c664e32c",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-09T22:09:57Z",
      "side": 1,
      "message": "To clarify, are you suggesting that we use the same auth_token as in the main Swarming pubsub, or are you suggesting that we use some other form of authentication altogether besides an auth_token?",
      "parentUuid": "f60ebc38_74d9164d",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e50f47ef_557df0e1",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-09T22:33:23Z",
      "side": 1,
      "message": "I\u0027m meaning that only the Swarming service (ideally using your project\u0027s scoped service account) would have permission to write to the topic; there\u0027s no need to include any additional token.",
      "parentUuid": "fe67f152_c664e32c",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ac1838f_22e12beb",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-09T23:49:22Z",
      "side": 1,
      "message": "Sounds good to me. I didn\u0027t realize that each project had a scoped service account.\n\nI\u0027ll upload a new CL reflect that idea. Do you know where I can find what that service account is named?",
      "parentUuid": "e50f47ef_557df0e1",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d2a47e5_cd3ee1ae",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-09T23:52:17Z",
      "side": 1,
      "message": "Additionally, do you know where I can find an example of that service account being used in current Swarming code? That would save me a day of reading code as I write the new Pub/Sub message publishing.",
      "parentUuid": "7ac1838f_22e12beb",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff60902b_f60c63dd",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-10T00:09:54Z",
      "side": 1,
      "message": "The service accounts are all defined in https://chrome-internal.googlesource.com/infradata/config/+/refs/heads/main/configs/luci-config/projects.cfg#600. It looks like the \"chromeos\" project still doesn\u0027t have one set :(. We can add one, but we\u0027ll need to set aside a day to ensure that this scoped account has access to everything that the current plethora of different LUCI service accounts currently have access to.\n\nHowever on the swarming side, you can use the project-scoped account by passing the LUCI project name as the \"project_id\" field to net.json_request_async (or one of the other methods: https://chromium.googlesource.com/infra/luci/luci-py/+/HEAD/appengine/components/components/net.py). Every pool additionally has an associated realm (https://chrome-internal.googlesource.com/infradata/config/+/refs/heads/main/configs/chromium-swarm/pools.cfg), and the bit before the \":\" is the LUCI project id to which that realm (and pool) belongs.",
      "parentUuid": "9d2a47e5_cd3ee1ae",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1036b9_f33cc330",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T18:53:58Z",
      "side": 1,
      "message": "Got it. Thank you for all the info and links; this will be really helpful.\n\nLet\u0027s create a scoped service account for ChromeOS. That can happen in parallel with the Swarming development. I\u0027ve found some seemingly relevant documentation (http://go/luci/onboarding/service_account). I\u0027ll poke around and see if I can be self-sufficient.",
      "parentUuid": "ff60902b_f60c63dd",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9f3492d_3b293486",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T21:14:30Z",
      "side": 1,
      "message": "In the above documentation, I see that there are a few types of service accounts bot identity and task identity. I *think* that what we want is bot identity. Would you agree?",
      "parentUuid": "8d1036b9_f33cc330",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34eddda_b6dc165d",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-13T21:17:05Z",
      "side": 1,
      "message": "nvm, found a bit of documentation at the top of infradata/.../luci-config/projects.cfg.\n\nHow critical is it that the service account has access to everything that other LUCI service accounts have access to? Can we lazily give it access later based on need?",
      "parentUuid": "f9f3492d_3b293486",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9618bd78_878693d8",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-14T20:43:03Z",
      "side": 1,
      "message": "Once a project service account is added, it will be used in place of the LUCI service\u0027s account for most services (sadly some still use their own appspot service accounts :().\n\nSo, we should try pretty hard to grant the new scoped account access to everything the various LUCI appspot accounts have access to before turning it on. I\u0027m guessing we\u0027ll want to do this in January though. Would you mind setting up some time on the calendar time for us to do this?",
      "parentUuid": "d34eddda_b6dc165d",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "093a233c_115c3fa0",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-15T17:14:23Z",
      "side": 1,
      "message": "Per our discussion over Chat yesterday, jaquesc@ or his team will pick this up with you in January. In the meantime, OK to move forward with this CL?",
      "parentUuid": "9618bd78_878693d8",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b912714_e6aa0571",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-12-15T20:58:11Z",
      "side": 1,
      "message": "I think the best course of action would be to implement this for project scoped accounts (i.e. drop this field) and then we set up a project scoped account in January.\n\nNote, too, that I\u0027m not the real owner for this code (tikuta@, jojwang@, jwata@ would be the real owners).\n\nSince the prod freeze happens in ~today, there\u0027s no way that you\u0027re going to be able to develop, test and deploy this before January anyway. If you really really really want to work on this, I would make a stack of CLs implementing this whole feature which can be reviewed over the break.",
      "parentUuid": "093a233c_115c3fa0",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b82691b_2ae8c100",
        "filename": "appengine/swarming/proto/config/pools.proto",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1326157
      },
      "writtenOn": "2021-12-20T19:38:45Z",
      "side": 1,
      "message": "SGTM, we\u0027ll develop in January.",
      "parentUuid": "7b912714_e6aa0571",
      "revId": "fa6204707039b33cb892cf819c85d7cf0a5804d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}