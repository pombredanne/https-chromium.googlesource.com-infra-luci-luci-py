(()=>{"use strict";var t={445:function(t,e){var s=this&&this.__awaiter||function(t,e,s,i){return new(s||(s=Promise))((function(n,r){function o(t){try{d(i.next(t))}catch(t){r(t)}}function a(t){try{d(i.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(o,a)}d((i=i.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.RpcCode=Object.freeze({OK:0,CANCELED:1,UNKNOWN:2,INVALID_ARGUMENT:3,DEADLINE_EXCEEDED:4,NOT_FOUND:5,ALREADY_EXISTS:6,PERMISSION_DENIED:7,RESOURCE_EXHAUSTED:8,FAILED_PRECONDITION:9,ABORTED:10,OUT_OF_RANGE:11,UNIMPLEMENTED:12,INTERNAL:13,UNAVAILABLE:14,DATA_LOSS:15,UNAUTHENTICATED:16});const i={};for(const t in e.RpcCode)i[e.RpcCode[t]]=t;function n(t){return i[t]}e.rpcCodeToCodeName=n,e.PrpcClient=class{constructor(t=null){t=t||{},this.host=t.host||document.location.host,this.accessToken=t.accessToken||null,this.insecure=t.hasOwnProperty("insecure")&&Boolean(t.insecure),this.fetchImpl=t.fetchImpl||window.fetch.bind(window)}call(t,i,n,a){return s(this,void 0,void 0,(function*(){if(!t)throw new TypeError("missing required argument: service");if(!i)throw new TypeError("missing required argument: method");if(!n)throw new TypeError("missing required argument: message");if(!(n instanceof Object))throw new TypeError("argument `message` must be a protobuf object");const s=`${!0===this.insecure?"http:":"https:"}//${this.host}/prpc/${t}/${i}`,d=this._requestOptions(n,a),l=yield this.fetchImpl(s,d);if(!l.headers.has("X-Prpc-Grpc-Code"))throw new o(l.status,"Invalid response: no X-Prpc-Grpc-Code response header");const c=Number.parseInt(l.headers.get("X-Prpc-Grpc-Code"),10);if(Number.isNaN(c))throw new o(l.status,"Invalid X-Prpc-Grpc-Code response header");const h=yield l.text();if(c!==e.RpcCode.OK)throw new r(c,h);if(!h.startsWith(")]}'"))throw new o(l.status,"Response body does not start with XSSI prefix: )]}'");return JSON.parse(h.substr(")]}'".length))}))}_requestOptions(t,e){const s={accept:"application/json","content-type":"application/json"};return e&&Object.assign(s,e),this.accessToken&&(s.authorization=`Bearer ${this.accessToken}`),{credentials:"omit",method:"POST",headers:s,body:JSON.stringify(t)}}};class r extends Error{constructor(t,e){if(super(),this.code=t,this.description=e,null===t)throw new Error("missing required argument: code");this.codeName=n(t)}get message(){return`code: ${this.code} (${this.codeName}) desc: ${this.description}`}}e.GrpcError=r;class o extends Error{constructor(t,e){if(super(),this.httpStatus=t,this.description=e,null===t)throw new Error("missing required argument: httpStatus")}get message(){return`status: ${this.httpStatus} desc: ${this.description}`}}e.ProtocolError=o}},e={};function s(i){var n=e[i];if(void 0!==n)return n.exports;var r=e[i]={exports:{}};return t[i].call(r.exports,r,r.exports,s),r.exports}(()=>{const t=new Promise((function(t,e){"loading"!==document.readyState?t():document.addEventListener("DOMContentLoaded",t)})),e=(t,e=document)=>Array.prototype.slice.call(e.querySelectorAll(t)),i=(t,e=document)=>e.querySelector(t);function n(t,e=1e4){"object"==typeof t&&(t=t.message||JSON.stringify(t));var s={message:t,duration:e};document.dispatchEvent(new CustomEvent("error-sk",{detail:s,bubbles:!0}))}const r=new WeakMap,o=t=>"function"==typeof t&&r.has(t),a=void 0!==window.customElements&&void 0!==window.customElements.polyfillWrapFlushCallback,d=(t,e,s=null)=>{let i=e;for(;i!==s;){const e=i.nextSibling;t.removeChild(i),i=e}},l={},c={},h=`{{lit-${String(Math.random()).slice(2)}}}`,u=`\x3c!--${h}--\x3e`,p=new RegExp(`${h}|${u}`),_="$lit$";class m{constructor(t,e){this.parts=[],this.element=e;let s=-1,i=0;const n=[],r=e=>{const o=e.content,a=document.createTreeWalker(o,133,null,!1);let d=0;for(;a.nextNode();){s++;const e=a.currentNode;if(1===e.nodeType){if(e.hasAttributes()){const n=e.attributes;let r=0;for(let t=0;t<n.length;t++)n[t].value.indexOf(h)>=0&&r++;for(;r-- >0;){const n=t.strings[i],r=v.exec(n)[2],o=r.toLowerCase()+_,a=e.getAttribute(o).split(p);this.parts.push({type:"attribute",index:s,name:r,strings:a}),e.removeAttribute(o),i+=a.length-1}}"TEMPLATE"===e.tagName&&r(e)}else if(3===e.nodeType){const t=e.data;if(t.indexOf(h)>=0){const r=e.parentNode,o=t.split(p),a=o.length-1;for(let t=0;t<a;t++)r.insertBefore(""===o[t]?f():document.createTextNode(o[t]),e),this.parts.push({type:"node",index:++s});""===o[a]?(r.insertBefore(f(),e),n.push(e)):e.data=o[a],i+=a}}else if(8===e.nodeType)if(e.data===h){const t=e.parentNode;null!==e.previousSibling&&s!==d||(s++,t.insertBefore(f(),e)),d=s,this.parts.push({type:"node",index:s}),null===e.nextSibling?e.data="":(n.push(e),s--),i++}else{let t=-1;for(;-1!==(t=e.data.indexOf(h,t+1));)this.parts.push({type:"node",index:-1})}}};r(e);for(const t of n)t.parentNode.removeChild(t)}}const g=t=>-1!==t.index,f=()=>document.createComment(""),v=/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F \x09\x0a\x0c\x0d"'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;class b{constructor(t,e,s){this._parts=[],this.template=t,this.processor=e,this.options=s}update(t){let e=0;for(const s of this._parts)void 0!==s&&s.setValue(t[e]),e++;for(const t of this._parts)void 0!==t&&t.commit()}_clone(){const t=a?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),e=this.template.parts;let s=0,i=0;const n=t=>{const r=document.createTreeWalker(t,133,null,!1);let o=r.nextNode();for(;s<e.length&&null!==o;){const t=e[s];if(g(t))if(i===t.index){if("node"===t.type){const t=this.processor.handleTextExpression(this.options);t.insertAfterNode(o.previousSibling),this._parts.push(t)}else this._parts.push(...this.processor.handleAttributeExpressions(o,t.name,t.strings,this.options));s++}else i++,"TEMPLATE"===o.nodeName&&n(o.content),o=r.nextNode();else this._parts.push(void 0),s++}};return n(t),a&&(document.adoptNode(t),customElements.upgrade(t)),t}}class k{constructor(t,e,s,i){this.strings=t,this.values=e,this.type=s,this.processor=i}getHTML(){const t=this.strings.length-1;let e="";for(let s=0;s<t;s++){const t=this.strings[s],i=v.exec(t);e+=i?t.substr(0,i.index)+i[1]+i[2]+_+i[3]+h:t+u}return e+this.strings[t]}getTemplateElement(){const t=document.createElement("template");return t.innerHTML=this.getHTML(),t}}const w=t=>null===t||!("object"==typeof t||"function"==typeof t);class ${constructor(t,e,s){this.dirty=!0,this.element=t,this.name=e,this.strings=s,this.parts=[];for(let t=0;t<s.length-1;t++)this.parts[t]=this._createPart()}_createPart(){return new y(this)}_getValue(){const t=this.strings,e=t.length-1;let s="";for(let i=0;i<e;i++){s+=t[i];const e=this.parts[i];if(void 0!==e){const t=e.value;if(null!=t&&(Array.isArray(t)||"string"!=typeof t&&t[Symbol.iterator]))for(const e of t)s+="string"==typeof e?e:String(e);else s+="string"==typeof t?t:String(t)}}return s+t[e]}commit(){this.dirty&&(this.dirty=!1,this.element.setAttribute(this.name,this._getValue()))}}class y{constructor(t){this.value=void 0,this.committer=t}setValue(t){t===l||w(t)&&t===this.value||(this.value=t,o(t)||(this.committer.dirty=!0))}commit(){for(;o(this.value);){const t=this.value;this.value=l,t(this)}this.value!==l&&this.committer.commit()}}class T{constructor(t){this.value=void 0,this._pendingValue=void 0,this.options=t}appendInto(t){this.startNode=t.appendChild(f()),this.endNode=t.appendChild(f())}insertAfterNode(t){this.startNode=t,this.endNode=t.nextSibling}appendIntoPart(t){t._insert(this.startNode=f()),t._insert(this.endNode=f())}insertAfterPart(t){t._insert(this.startNode=f()),this.endNode=t.endNode,t.endNode=this.startNode}setValue(t){this._pendingValue=t}commit(){for(;o(this._pendingValue);){const t=this._pendingValue;this._pendingValue=l,t(this)}const t=this._pendingValue;t!==l&&(w(t)?t!==this.value&&this._commitText(t):t instanceof k?this._commitTemplateResult(t):t instanceof Node?this._commitNode(t):Array.isArray(t)||t[Symbol.iterator]?this._commitIterable(t):t===c?(this.value=c,this.clear()):this._commitText(t))}_insert(t){this.endNode.parentNode.insertBefore(t,this.endNode)}_commitNode(t){this.value!==t&&(this.clear(),this._insert(t),this.value=t)}_commitText(t){const e=this.startNode.nextSibling;t=null==t?"":t,e===this.endNode.previousSibling&&3===e.nodeType?e.data=t:this._commitNode(document.createTextNode("string"==typeof t?t:String(t))),this.value=t}_commitTemplateResult(t){const e=this.options.templateFactory(t);if(this.value instanceof b&&this.value.template===e)this.value.update(t.values);else{const s=new b(e,t.processor,this.options),i=s._clone();s.update(t.values),this._commitNode(i),this.value=s}}_commitIterable(t){Array.isArray(this.value)||(this.value=[],this.clear());const e=this.value;let s,i=0;for(const n of t)void 0===(s=e[i])&&(s=new T(this.options),e.push(s),0===i?s.appendIntoPart(this):s.insertAfterPart(e[i-1])),s.setValue(n),s.commit(),i++;i<e.length&&(e.length=i,this.clear(s&&s.endNode))}clear(t=this.startNode){d(this.startNode.parentNode,t.nextSibling,this.endNode)}}class I{constructor(t,e,s){if(this.value=void 0,this._pendingValue=void 0,2!==s.length||""!==s[0]||""!==s[1])throw new Error("Boolean attributes can only contain a single expression");this.element=t,this.name=e,this.strings=s}setValue(t){this._pendingValue=t}commit(){for(;o(this._pendingValue);){const t=this._pendingValue;this._pendingValue=l,t(this)}if(this._pendingValue===l)return;const t=!!this._pendingValue;this.value!==t&&(t?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name)),this.value=t,this._pendingValue=l}}class E extends ${constructor(t,e,s){super(t,e,s),this.single=2===s.length&&""===s[0]&&""===s[1]}_createPart(){return new C(this)}_getValue(){return this.single?this.parts[0].value:super._getValue()}commit(){this.dirty&&(this.dirty=!1,this.element[this.name]=this._getValue())}}class C extends y{}let S=!1;try{const t={get capture(){return S=!0,!1}};window.addEventListener("test",t,t),window.removeEventListener("test",t,t)}catch(t){}class x{constructor(t,e,s){this.value=void 0,this._pendingValue=void 0,this.element=t,this.eventName=e,this.eventContext=s,this._boundHandleEvent=t=>this.handleEvent(t)}setValue(t){this._pendingValue=t}commit(){for(;o(this._pendingValue);){const t=this._pendingValue;this._pendingValue=l,t(this)}if(this._pendingValue===l)return;const t=this._pendingValue,e=this.value,s=null==t||null!=e&&(t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive),i=null!=t&&(null==e||s);s&&this.element.removeEventListener(this.eventName,this._boundHandleEvent,this._options),i&&(this._options=D(t),this.element.addEventListener(this.eventName,this._boundHandleEvent,this._options)),this.value=t,this._pendingValue=l}handleEvent(t){"function"==typeof this.value?this.value.call(this.eventContext||this.element,t):this.value.handleEvent(t)}}const D=t=>t&&(S?{capture:t.capture,passive:t.passive,once:t.once}:t.capture),N=new class{handleAttributeExpressions(t,e,s,i){const n=e[0];return"."===n?new E(t,e.slice(1),s).parts:"@"===n?[new x(t,e.slice(1),i.eventContext)]:"?"===n?[new I(t,e.slice(1),s)]:new $(t,e,s).parts}handleTextExpression(t){return new T(t)}};function A(t){let e=P.get(t.type);void 0===e&&(e={stringsArray:new WeakMap,keyString:new Map},P.set(t.type,e));let s=e.stringsArray.get(t.strings);if(void 0!==s)return s;const i=t.strings.join(h);return void 0===(s=e.keyString.get(i))&&(s=new m(t,t.getTemplateElement()),e.keyString.set(i,s)),e.stringsArray.set(t.strings,s),s}const P=new Map,L=new WeakMap,O=(t,e,s)=>{let i=L.get(e);void 0===i&&(d(e,e.firstChild),L.set(e,i=new T(Object.assign({templateFactory:A},s))),i.appendInto(e)),i.setValue(t),i.commit()};(window.litHtmlVersions||(window.litHtmlVersions=[])).push("1.0.0");const H=(t,...e)=>new k(t,e,"html",N),M=(B=t=>e=>{if(void 0===t&&e instanceof y){if(t!==e.value){const t=e.committer.name;e.committer.element.removeAttribute(t)}}else e.setValue(t)},(...t)=>{const e=B(...t);return r.set(e,!0),e});var B;function G(t){if(!t)return"";var e=[];return Object.keys(t).sort().forEach((function(s){t[s].forEach((function(t){e.push(encodeURIComponent(s)+"="+encodeURIComponent(t))}))})),e.join("&")}function R(t){var e=[];return Object.keys(t).sort().forEach((function(s){Array.isArray(t[s])?t[s].forEach((function(t){e.push(encodeURIComponent(s)+"="+encodeURIComponent(t))})):"object"==typeof t[s]?e.push(encodeURIComponent(s)+"="+encodeURIComponent(R(t[s]))):e.push(encodeURIComponent(s)+"="+encodeURIComponent(t[s]))})),e.join("&")}function U(t,e){e=e||{};for(var s={},i=t.split("&"),n=0;n<i.length;n++){var r=i[n].split("=",2);if(2==r.length){var o=decodeURIComponent(r[0]),a=decodeURIComponent(r[1]);if(e.hasOwnProperty(o))switch(typeof e[o]){case"boolean":s[o]="true"==a;break;case"number":s[o]=Number(a);break;case"object":if(Array.isArray(e[o])){var d=s[o]||[];d.push(a),s[o]=d}else s[o]=U(a,e[o]);break;default:s[o]=a}else s[o]=a}}return s}const V=t=>JSON.parse(JSON.stringify(t));function q(e,s){let i=V(e()),n=!1;const r=()=>{n=!0;let t=U(window.location.search.slice(1),i);s(function(t,e){let s={};return Object.keys(e).forEach((function(i){t.hasOwnProperty(i)?s[i]=V(t[i]):s[i]=V(e[i])})),s}(t,i))};return t.then(r),window.addEventListener("popstate",r),()=>{if(!n)return;let t=R(function(t,e){let s={};return Object.keys(t).forEach((function(i){(function(t,e){if(typeof t!=typeof e)return!1;let s=typeof t;return"string"===s||"boolean"===s||"number"===s?t===e:"object"===s?Array.isArray(s)?JSON.stringify(t)===JSON.stringify(e):R(t)===R(e):void 0})(t[i],e[i])||(s[i]=t[i])})),s}(e(),i));history.pushState(null,"",window.location.origin+window.location.pathname+"?"+t)}}function F(t,e){if(t.hasOwnProperty(e)){let s=t[e];delete t[e],t[e]=s}}class W extends HTMLElement{get _role(){return"checkbox"}static get observedAttributes(){return["checked","disabled","name","label"]}connectedCallback(){this.innerHTML=`<label><input type=${this._role}></input><span class=box></span><span class=label></span></label>`,this._label=this.querySelector(".label"),this._input=this.querySelector("input"),F(this,"checked"),F(this,"disabled"),F(this,"name"),F(this,"label"),this._input.checked=this.checked,this._input.disabled=this.disabled,this._input.setAttribute("name",this.getAttribute("name")),this._label.textContent=this.getAttribute("label")}get checked(){return this.hasAttribute("checked")}set checked(t){let e=!!t;this._input.checked=e,t?this.setAttribute("checked",""):this.removeAttribute("checked")}get disabled(){return this.hasAttribute("disabled")}set disabled(t){let e=!!t;this._input.disabled=e,e?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get name(){return this._input.getAttribute("name")}set name(t){this.setAttribute("name",t),this._input.setAttribute("name",t)}get label(){return this._input.getAttribute("label")}set label(t){this.setAttribute("label",t),this._input.setAttribute("label",t)}attributeChangedCallback(t,e,s){if(!this._input)return;let i=null!=s;switch(t){case"checked":this._input.checked=i;break;case"disabled":this._input.disabled=i;break;case"name":this._input.name=s;break;case"label":this._label.textContent=s}}}window.customElements.define("checkbox-sk",W);const z=document.createElement("template");z.innerHTML='<svg class="icon-sk-svg" xmlns="http://www.w3.org/2000/svg" width=24 height=24 viewBox="0 0 24 24"><path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg>',window.customElements.define("add-circle-outline-icon-sk",class extends HTMLElement{connectedCallback(){let t=z.content.cloneNode(!0);this.appendChild(t)}});const j=document.createElement("template");j.innerHTML='<svg class="icon-sk-svg" xmlns="http://www.w3.org/2000/svg" width=24 height=24 viewBox="0 0 24 24"><path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg>',window.customElements.define("remove-circle-outline-icon-sk",class extends HTMLElement{connectedCallback(){let t=j.content.cloneNode(!0);this.appendChild(t)}});const X=document.createElement("template");X.innerHTML="<div class=backdrop></div>",window.customElements.define("dialog-pop-over",class extends HTMLElement{constructor(){super(),this._backdrop=null,this._content=null}connectedCallback(){const t=X.content.cloneNode(!0);if(this.appendChild(t),this._backdrop=i(".backdrop",this),this._content=i(".content",this),!this._content)throw new Error("You must have an element with class content to show.")}hide(){this._backdrop.classList.remove("opened"),this._content.classList.remove("opened")}show(){const t=window.innerWidth,e=window.innerHeight,s=Math.min(this._content.offsetWidth,t-50),i=Math.min(this._content.offsetHeight,e-50);this._content.style.width=s,this._content.style.left=(t-s)/2,this._content.style.top=(e-i)/2,this._backdrop.classList.add("opened"),this._content.classList.add("opened")}});const J=Symbol("loadScript"),K=Symbol("instance");let Y;const Q=new class{get[K](){return Y}set[K](t){Y=t}constructor(){if(this[K])return this[K];this[K]=this}reset(){Y=null}[J](){return this.scriptPromise||(this.scriptPromise=new Promise((t=>{const e=document.getElementsByTagName("body")[0],s=document.createElement("script");s.type="text/javascript",s.onload=function(){Q.api=window.google,Q.api.charts.load("current",{packages:["corechart","table"]}),Q.api.charts.setOnLoadCallback((()=>{t()}))},s.src="https://www.gstatic.com/charts/loader.js",e.appendChild(s)}))),this.scriptPromise}load(t,e){return this[J]().then((()=>{if(e){let s={};s=e instanceof Object?e:Array.isArray(e)?{packages:e}:{packages:[e]},this.api.charts.load("current",s),this.api.charts.setOnLoadCallback(t)}else{if("function"!=typeof t)throw"callback must be a function";t()}}))}},Z=[{units:"w",delta:604800},{units:"d",delta:86400},{units:"h",delta:3600},{units:"m",delta:60},{units:"s",delta:1}],tt=1048576,et=1024*tt,st=[{units:" PB",delta:0x4000000000000},{units:" TB",delta:1099511627776},{units:" GB",delta:et},{units:" MB",delta:tt},{units:" KB",delta:1024},{units:" B",delta:1}];function it(t){if(t<0&&(t=-t),0===t)return"  0s";let e="";for(let s=0;s<Z.length;s++)if(Z[s].delta<=t){let i=Math.floor(t/Z[s].delta)+Z[s].units;for(;i.length<4;)i=" "+i;e+=i,t%=Z[s].delta}return e}function nt(t,e=1){return Number.isInteger(e)&&(t*=e),function(t,e){for(let s=0;s<e.length-1;s++)if(Math.round(t/e[s+1].delta)*e[s+1].delta/e[s].delta>=1)return Math.round(t/e[s].delta)+e[s].units;let s=e.length-1;return Math.round(t/e[s].delta)+e[s].units}(t,st)}function rt(t){let e=t.toString(),s=e.substring(e.indexOf("("));return t.toLocaleString()+" "+s}function ot(t=[],e=[]){const s=[];for(const e of t)if(e.key&&e.value)if(Array.isArray(e.value))for(const t of e.value)s.push(e.key+":"+t);else s.push(e.key+":"+e.value);else s.push(e);return"/botlist?"+G({f:s,c:e})}function at(t){if(0===t||"0"===t)return"0s";if(!t)return"--";const e=parseFloat(t);return e?e>60?it(e):e.toFixed(2)+"s":t+" seconds"}function dt(t,e,s=!0){F(t,e),void 0===t[e]&&t.hasAttribute(e)&&(t[e]=t.getAttribute(e),s&&t.removeAttribute(e))}function lt(t,e){if(t["human_"+e]="--",t[e]){t[e].endsWith&&!t[e].endsWith("Z")&&(t[e]+="Z"),t[e]=new Date(t[e]);const s=t[e].toString(),i=s.substring(s.indexOf("("));t["human_"+e]=t[e].toLocaleString()+" "+i}}function ct(t=[],e=[],s,i){const n=[];for(const e of t)if(e.key&&e.value)if(Array.isArray(e.value))for(const t of e.value)n.push(e.key+":"+t);else n.push(e.key+":"+e.value);else n.push(e);const r={f:n,c:e};return s&&(r.st=[s.getTime()]),i&&(r.et=[i.getTime()],r.n=[!1]),"/tasklist?"+G(r)}function ht(t,e){if(t)return e||(t=t.substring(0,t.length-1)+"0"),`/task?id=${t}`}const ut=new Promise(((t,e)=>{try{Q.load(t)}catch(t){e(t)}}));function pt(t){return"string"==typeof t?JSON.parse(t):t}window.customElements.define("stacked-time-chart",class extends HTMLElement{constructor(){super(),this._loaded=!1,this._error=""}connectedCallback(){dt(this,"colors"),dt(this,"labels"),dt(this,"values"),this._colors=pt(this._colors),this._labels=pt(this._labels),this._values=pt(this._values),ut.then((()=>{this._loaded=!0,this.render()})).catch((t=>{console.error(t),this._error="Could not load Google Charts JS from Internet",this.render()})),this.render()}get colors(){return this._colors}set colors(t){this._colors=t,this.render()}get labels(){return this._labels}set labels(t){this._labels=t,this.render()}get values(){return this._values}set values(t){this._values=t,this.render()}drawChart(){const t=Q.api.visualization.arrayToDataTable([["Type"].concat(this._labels),[""].concat(this._values)]);let e=0;for(const t of this._values)e+=+t;const s=[{v:0,f:""}];let i=0;if(e<120){for(let t=10;t<e;t+=10)s.push({v:t,f:t+"s"});i=5}else if(e<1500){for(let t=60;t<e;t+=60)s.push({v:t,f:t/60+"m"});i=e<300?5:e<900?1:0}else if(e<1e6){for(let t=600;t<e;t+=600)s.push({v:t,f:t/60+"m"});i=e<6e3?10:e<12e3?5:1}const n={width:400,height:250,isStacked:!0,chartArea:{width:"100%",height:"65%"},legend:{position:"top",maxLines:1,alignment:"center",textStyle:{fontSize:12}},colors:this._colors,hAxis:{title:"Time",ticks:s,minorGridlines:{count:i}}};new Q.api.visualization.BarChart(this.firstElementChild).draw(t,n)}render(){O(H`<div id="chart">${this._error}</div>`,this,{eventContext:this}),this._loaded&&this.drawChart()}}),window.customElements.define("toast-sk",class extends HTMLElement{constructor(){super(),this._timer=null}connectedCallback(){this.hasAttribute("duration")||(this.duration=5e3),F(this,"duration")}get duration(){return+this.getAttribute("duration")}set duration(t){this.setAttribute("duration",t)}show(){this.setAttribute("shown",""),this.duration>0&&!this._timer&&(this._timer=window.setTimeout((()=>{this._timer=null,this.hide()}),this.duration))}hide(){this.removeAttribute("shown"),this._timer&&(window.clearTimeout(this._timer),this._timer=null)}}),window.customElements.define("error-toast-sk",class extends HTMLElement{connectedCallback(){this.innerHTML="<toast-sk></toast-sk>",this._toast=this.firstElementChild,document.addEventListener("error-sk",this)}disconnectedCallback(){document.removeEventListener("error-sk",this)}handleEvent(t){t.detail.duration&&(this._toast.duration=t.detail.duration),this._toast.textContent=t.detail.message,this._toast.show()}});const _t=document.createElement("template");_t.innerHTML='<svg class="icon-sk-svg" xmlns="http://www.w3.org/2000/svg" width=24 height=24 viewBox="0 0 24 24"><path d="M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z"/></svg>',window.customElements.define("bug-report-icon-sk",class extends HTMLElement{connectedCallback(){let t=_t.content.cloneNode(!0);this.appendChild(t)}});const mt=document.createElement("template");function gt(t){if(t.ok)return t.json();throw{message:`Bad network response: ${t.statusText}`,resp:t,status:t.status}}mt.innerHTML='<svg class="icon-sk-svg" xmlns="http://www.w3.org/2000/svg" width=24 height=24 viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',window.customElements.define("menu-icon-sk",class extends HTMLElement{connectedCallback(){let t=mt.content.cloneNode(!0);this.appendChild(t)}}),window.customElements.define("spinner-sk",class extends HTMLElement{connectedCallback(){F(this,"active")}get active(){return this.hasAttribute("active")}set active(t){t?this.setAttribute("active",""):this.removeAttribute("active")}}),window.customElements.define("oauth-login",class extends HTMLElement{connectedCallback(){F(this,"testing_offline"),this._auth_header="",this._profile=null,this.testing_offline||this._fetchAuthState().then((t=>{"anonymous:anonymous"!=t.identity&&(this._fireLoginEvent(t),this.render())}),(t=>{console.error(t),n(`Error getting auth state: ${JSON.stringify(t)}`,1e4)})),this.render()}static get observedAttributes(){return["testing_offline"]}get authHeader(){return this._auth_header}get profile(){return this._profile}get testing_offline(){return this.hasAttribute("testing_offline")}set testing_offline(t){t?this.setAttribute("testing_offline",!0):this.removeAttribute("testing_offline")}_fireLoginEvent(t){this._profile={email:t.email,imageURL:t.picture},this._auth_header=`Bearer ${t.accessToken}`,this.dispatchEvent(new CustomEvent("log-in",{detail:{authHeader:this._auth_header,profile:this._profile},bubbles:!0}))}_logIn(){this.testing_offline?(this._fireLoginEvent({email:"missing@chromium.org",picture:"http://storage.googleapis.com/gd-wagtail-prod-assets/original_images/logo_google_fonts_color_2x_web_64dp.png",accessToken:"12345678910-boomshakalaka"}),this.render()):this._nagivateTo("login")}_logOut(){this.testing_offline?window.location.reload():this._nagivateTo("logout")}_nagivateTo(t){const e=window.location.pathname+window.location.search;window.location=e&&"/"!=e?`/auth/openid/${t}?r=${encodeURIComponent(e)}`:`/auth/openid/${t}`}_fetchAuthState(){return fetch("/auth/openid/state",{mode:"same-origin",credentials:"same-origin",cache:"no-store"}).then(gt)}render(){O((t=>t.authHeader?H` <div> <img class="center" id="avatar" src="${t._profile.imageURL}" width="30" height="30" /> <span class="center">${t._profile.email}</span> <span class="center">|</span> <a class="center" @click=${t._logOut} href="#">Sign out</a> </div>`:H` <div> <a @click=${t._logIn} href="#">Sign in</a> </div>`)(this),this,{eventContext:this})}attributeChangedCallback(t,e,s){this.render()}});const ft=document.createElement("template");ft.innerHTML="\n<button class=toggle-button>\n  <menu-icon-sk>\n  </menu-icon-sk>\n</button>\n";const vt=document.createElement("template");vt.innerHTML="\n<div class=spinner-spacer>\n  <spinner-sk></spinner-sk>\n</div>\n";const bt="You must log in to see more details",kt=document.createElement("template");function wt(t,e){if(!$t[e]||"none"===t||!t)return t;let s=$t[e][t];if("gpu"===e){const i=t.split("-")[0];s=$t[e][i]}else if("os"===e&&t.startsWith("Windows")){const i=t.split(".")[0];s=$t[e][i]}return s?`${s} (${t})`:t}kt.innerHTML='\n<a target=_blank rel=noopener\n   href="https://bugs.chromium.org/p/chromium/issues/entry?components=Infra%3ELUCI%3ETaskDistribution%3EUI&owner=kjlubick@chromium.org&status=Assigned">\n  <bug-report-icon-sk class=fab></bug-report-icon-sk>\n</a>',window.customElements.define("swarming-app",class extends HTMLElement{constructor(){super(),this._busyTaskCount=0,this._spinner=null,this._dynamicEle=null,this._auth_header="",this._profile={},this._server_details={server_version:bt,bot_version:"",cas_viewer_server:""};const t=location.hostname.indexOf(".appspot.com");this._project_id=location.hostname.substring(0,t),this._permissions={}}connectedCallback(){F(this,"testing_offline"),this._addHTML(),this.addEventListener("log-in",(t=>{this._auth_header=t.detail.authHeader,this._profile=t.detail.profile,this._fetch()})),this.render()}static get observedAttributes(){return["testing_offline"]}get busy(){return!!this._busyTaskCount}get permissions(){return this._permissions}get profile(){return this._profile}get serverDetails(){return this._server_details}get testing_offline(){return this.hasAttribute("testing_offline")}set testing_offline(t){t?this.setAttribute("testing_offline",!0):this.removeAttribute("testing_offline")}addBusyTasks(t){this._busyTaskCount+=t,this._spinner&&this._busyTaskCount>0&&(this._spinner.active=!0)}finishedTask(){this._busyTaskCount--,this._busyTaskCount<=0&&(this._busyTaskCount=0,this._spinner&&(this._spinner.active=!1),this.dispatchEvent(new CustomEvent("busy-end",{bubbles:!0})))}_addHTML(){const t=this.querySelector("header"),e=t&&t.querySelector("aside"),s=this.querySelector("footer");if(!(t&&e&&e.classList.contains("hideable")))return;let i=ft.content.cloneNode(!0);t.insertBefore(i,t.firstElementChild),(i=t.firstElementChild).addEventListener("click",(t=>this._toggleMenu(t,e)));const n=vt.content.cloneNode(!0);t.insertBefore(n,e),this._spinner=t.querySelector("spinner-sk");const r=document.createElement("span");r.classList.add("grow"),t.appendChild(r),this._dynamicEle=document.createElement("div"),this._dynamicEle.classList.add("right"),t.appendChild(this._dynamicEle);const o=document.createElement("error-toast-sk");s.append(o);const a=kt.content.cloneNode(!0);s.append(a)}_toggleMenu(t,e){e.classList.toggle("shown")}_fetch(){if(!this._auth_header)return;this._server_details={server_version:"<loading>",bot_version:"<loading>"};const t={headers:{authorization:this._auth_header}};this.addBusyTasks(1),fetch("/_ah/api/swarming/v1/server/details",t).then(gt).then((t=>{this._server_details=t,this.render(),this.dispatchEvent(new CustomEvent("server-details-loaded",{bubbles:!0})),this.finishedTask()})).catch((t=>{403===t.status?(this._server_details={server_version:"User unauthorized - try logging in with a different account",bot_version:""},this.render()):(console.error(t),n(`Unexpected error loading details: ${t.message}`,5e3)),this.finishedTask()})),this._fetchPermissions(t)}_fetchPermissions(t,e){this.addBusyTasks(1);let s="/_ah/api/swarming/v1/server/permissions";return e&&(s+=`?${R(e)}`),fetch(s,t).then(gt).then((t=>{this._permissions=t,this.render(),this.dispatchEvent(new CustomEvent("permissions-loaded",{bubbles:!0})),this.finishedTask()})).catch((t=>{403!==t.status&&(console.error(t),n(`Unexpected error loading permissions: ${t.message}`,5e3)),this.finishedTask()}))}render(){this._dynamicEle&&O((t=>H` <div class="server-version"> AppEngine version: ${function(t,e){return e&&e.server_version?H`<a href=${"https://console.cloud.google.com/appengine/versions?project=".concat(t,"&serviceId=default&pageState=(%22versionsTable%22:(%22f%22:%22%255B%257B_22k_22_3A_22Version_22_2C_22t_22_3A10_2C_22v_22_3A_22_5C_22",e.server_version,"_5C_22_22_2C_22s_22_3Atrue_2C_22i_22_3A_22id_22%257D%255D%22))")} > ${e.server_version}</a >`:bt}(t._project_id,t._server_details)} Git version:${function(t){if(!t||!t.server_version)return"";const e=t.server_version.split("-");if(e.length>=3)return console.error(`Invalid Git version. version=${t.server_version}`),"";const s=2==e.length?e[1]:e[0];return H`<a href=https://chromium.googlesource.com/infra/luci/luci-py/+/${s}>${s}</a>`}(t._server_details)} </div> <oauth-login ?testing_offline=${t.testing_offline}> </oauth-login>`)(this),this._dynamicEle)}attributeChangedCallback(t,e,s){this.render()}});const $t={device:{"iPad4,1":"iPad Air","iPad5,1":"iPad mini 4","iPad6,3":"iPad Pro [9.7 in]","iPhone7,2":"iPhone 6","iPhone9,1":"iPhone 7"},device_type:{angler:"Nexus 6p",athene:"Moto G4",blueline:"Pixel 3",bullhead:"Nexus 5X",crosshatch:"Pixel 3 XL",darcy:"NVIDIA Shield [2017]",dragon:"Pixel C",flame:"Pixel 4",flo:"Nexus 7 [2013]",flounder:"Nexus 9",foster:"NVIDIA Shield [2015]",fugu:"Nexus Player",gce_x86:"Android on GCE",goyawifi:"Galaxy Tab 3",grouper:"Nexus 7 [2012]",hammerhead:"Nexus 5",herolte:"Galaxy S7 [Global]",heroqlteatt:"Galaxy S7 [AT&T]","iPad4,1":"iPad Air","iPad5,1":"iPad mini 4","iPad6,3":"iPad Pro [9.7 in]","iPhone7,2":"iPhone 6","iPhone9,1":"iPhone 7","iPhone10,1":"iPhone 8",j5xnlte:"Galaxy J5",m0:"Galaxy S3",mako:"Nexus 4",manta:"Nexus 10",marlin:"Pixel XL",mdarcy:"NVIDIA Shield [2019]",oriole:"Pixel 6",sailfish:"Pixel",sargo:"Pixel 3a",shamu:"Nexus 6",sprout:"Android One",starlte:"Galaxy S9",taimen:"Pixel 2 XL","TECNO-KB8":"TECNO Spark 3 Pro",walleye:"Pixel 2",zerofltetmo:"Galaxy S6"},gpu:{1002:"AMD","1002:6613":"AMD Radeon R7 240","1002:6646":"AMD Radeon R9 M280X","1002:6779":"AMD Radeon HD 6450/7450/8450","1002:67ef":"AMD Radeon Pro 560X","1002:679e":"AMD Radeon HD 7800","1002:6821":"AMD Radeon HD 8870M","1002:683d":"AMD Radeon HD 7770/8760","1002:7340":"AMD Radeon RX 5500 XT","1002:9830":"AMD Radeon HD 8400","1002:9874":"AMD Carrizo","1a03":"ASPEED","1a03:2000":"ASPEED Graphics Family","102b":"Matrox","102b:0522":"Matrox MGA G200e","102b:0532":"Matrox MGA G200eW","102b:0534":"Matrox G200eR2","10de":"NVIDIA","10de:08a4":"NVIDIA GeForce 320M","10de:08aa":"NVIDIA GeForce 320M","10de:0a65":"NVIDIA GeForce 210","10de:0fe9":"NVIDIA GeForce GT 750M Mac Edition","10de:0ffa":"NVIDIA Quadro K600","10de:104a":"NVIDIA GeForce GT 610","10de:11c0":"NVIDIA GeForce GTX 660","10de:1244":"NVIDIA GeForce GTX 550 Ti","10de:1401":"NVIDIA GeForce GTX 960","10de:1ba1":"NVIDIA GeForce GTX 1070","10de:1cb3":"NVIDIA Quadro P400","10de:2184":"NVIDIA GeForce GTX 1660",8086:"Intel","8086:0046":"Intel Ironlake HD Graphics","8086:0102":"Intel Sandy Bridge HD Graphics 2000","8086:0116":"Intel Sandy Bridge HD Graphics 3000","8086:0166":"Intel Ivy Bridge HD Graphics 4000","8086:0412":"Intel Haswell HD Graphics 4600","8086:041a":"Intel Haswell HD Graphics","8086:0a16":"Intel Haswell HD Graphics 4400","8086:0a26":"Intel Haswell HD Graphics 5000","8086:0a2e":"Intel Haswell Iris Graphics 5100","8086:0d26":"Intel Haswell Iris Pro Graphics 5200","8086:0f31":"Intel Bay Trail HD Graphics","8086:1616":"Intel Broadwell HD Graphics 5500","8086:161e":"Intel Broadwell HD Graphics 5300","8086:1626":"Intel Broadwell HD Graphics 6000","8086:162b":"Intel Broadwell Iris Graphics 6100","8086:1912":"Intel Skylake HD Graphics 530","8086:191e":"Intel Skylake HD Graphics 515","8086:1926":"Intel Skylake Iris 540/550","8086:193b":"Intel Skylake Iris Pro 580","8086:22b1":"Intel Braswell HD Graphics","8086:3e92":"Intel Coffee Lake S UHD Graphics 630","8086:3e9b":"Intel Coffee Lake H UHD Graphics 630","8086:3ea5":"Intel Coffee Lake Iris Plus Graphics 655","8086:5912":"Intel Kaby Lake HD Graphics 630","8086:591e":"Intel Kaby Lake HD Graphics 615","8086:5926":"Intel Kaby Lake Iris Plus Graphics 640","8086:9bc5":"Intel Comet Lake S UHD Graphics 630"},os:{"Ubuntu-14.04":"Ubuntu 14.04 Trusty Tahr","Ubuntu-16.04":"Ubuntu 16.04 Xenial Xerus","Ubuntu-18.04":"Ubuntu 18.04 Bionic Beaver","Ubuntu-20.04":"Ubuntu 20.04 Focal Fossa","Ubuntu-22.04":"Ubuntu 22.04 Jammy Jellyfish","Windows-10-10240":"Windows 10 version 1507","Windows-10-10586":"Windows 10 version 1511","Windows-10-14393":"Windows 10 version 1607","Windows-10-15063":"Windows 10 version 1703","Windows-10-16299":"Windows 10 version 1709","Windows-10-17134":"Windows 10 version 1803","Windows-10-17763":"Windows 10 version 1809","Windows-10-18362":"Windows 10 version 1903","Windows-10-18363":"Windows 10 version 1909","Windows-Server-14393":"Windows Server 2016","Windows-Server-17134":"Windows Server version 1803","Windows-Server-17763":"Windows Server 2019 or version 1809","Windows-Server-18362":"Windows Server version 1903","Windows-Server-18363":"Windows Server version 1909"}},yt=new Set(["PENDING","RUNNING"]),Tt=new Set(["TIMED_OUT","EXPIRED","NO_RESOURCE","CANCELED","KILLED"]);function It(t,e){const s=t.filter((function(t){return t.key===e}));if(!s.length)return null;const i=s[0].value;return i.length?i[0]:null}function Et(t,e){return`${t}/${e.casInstance}/blobs/${e.digest.hash}/${e.digest.sizeBytes||0}/tree`}const Ct="${SWARMING_TASK_ID}";function St(t){return t.dedupedFrom}function xt(t){return t&&"PENDING"!==t.state&&"NO_RESOURCE"!==t.state&&"CANCELED"!==t.state&&"EXPIRED"!==t.state}const Dt=["abandoned_ts","bot_idle_since_ts","completed_ts","created_ts","modified_ts","started_ts","abandonedTs","botIdleSinceTs","completedTs","createdTs","modifiedTs","startedTs"];var Nt=s(445);class At{constructor(t,e=null,s={}){const i={...s,accessToken:void 0};if(window.LIVE_DEMO&&(i.insecure=!0),this._token=t,e){const t=(t,s)=>(s.signal=e,fetch(t,s));i.fetchImpl=t}this._client=new Nt.PrpcClient(i)}get service(){throw new Error("Subclasses must define service")}_call(t,e){const s={authorization:this._token};return this._client.call(this.service,t,e,s)}}class Pt extends At{get service(){return"swarming.v2.Tasks"}cancel(t,e){return this._call("CancelTask",{task_id:t,kill_running:e})}stdout(t,e,s){return this._call("GetStdout",{task_id:t,offset:e,length:s})}request(t){return this._call("GetRequest",{task_id:t})}result(t,e){return this._call("GetResult",{task_id:t,include_performance_stats:e})}new(t){return this._call("NewTask",t)}count(t){return this._call("CountTasks",t)}list(t){return t.state||(t={...t,state:"QUERY_ALL"}),this._call("ListTasks",t)}massCancel(t){return this._call("CancelTasks",t)}}class Lt extends At{get service(){return"swarming.v2.Bots"}getBot(t){return this._call("GetBot",{bot_id:t})}getTasks(t,e){const s={sort:4,state:10,bot_id:t,cursor:e,limit:30,include_performance_stats:!0};return this._call("ListBotTasks",s)}terminate(t){const e={bot_id:t};return this._call("TerminateBot",e)}events(t,e){const s={limit:50,bot_id:t,cursor:e};return this._call("ListBotEvents",s)}delete(t){return this._call("DeleteBot",{bot_id:t})}count(t){return this._call("CountBots",{dimensions:t})}dimensions(t){return this._call("GetBotDimensions",{pool:t})}list(t){return this._call("ListBots",t)}}class Ot extends HTMLElement{constructor(t){super(),this._template=t,this._app=null,this._auth_header="",this._profile=null,this._notAuthorized=!1}connectedCallback(){F(this,"testing_offline"),this._authHeaderEvent=t=>{this._auth_header=t.detail.authHeader},this.addEventListener("log-in",this._authHeaderEvent)}disconnectedCallback(){this.removeEventListener("log-in",this._authHeaderEvent)}static get observedAttributes(){return["testing_offline"]}get app(){return this._app}get authHeader(){return this._auth_header}get loggedInAndAuthorized(){return!!this._auth_header&&!this._notAuthorized}get permissions(){return this._app&&this._app.permissions||{}}get profile(){return this._app&&this._app.profile||{}}get serverDetails(){return this._app&&this._app.serverDetails||{}}get testing_offline(){return this.hasAttribute("testing_offline")}set testing_offline(t){t?this.setAttribute("testing_offline",!0):this.removeAttribute("testing_offline")}prpcError(t,e,s){"PERMISSION_DENIED"!==t.codeName||s?this.fetchError(t,e,s):(this._message="User unauthorized - try logging in with a different account",this._notAuthorized=!0,this.render(),this._app.finishedTask())}fetchError(t,e,s){403!==t.status||s?"AbortError"!==t.name&&(console.error(t),n(`Unexpected error loading ${e}: ${t.message}`,5e3)):(this._message="User unauthorized - try logging in with a different account",this._notAuthorized=!0,this.render()),this._app.finishedTask()}render(){O(this._template(this),this,{eventContext:this}),this._app||(this._app=this.firstElementChild,O(this._template(this),this,{eventContext:this}))}attributeChangedCallback(t,e,s){this.render()}_createTasksService(){return new Pt(this.authHeader,this._fetchController.signal)}_createBotService(){return new Lt(this.authHeader,this._fetchController.signal)}}const Ht=(t,e,s,i)=>{let n="https://console.cloud.google.com/logs/query";if(n+=`;query=${encodeURIComponent(e)}`,s&&(n+=`;cursorTimestamp=${s.toISOString()}`,i)){const t=[s,i].map((t=>t.toISOString())).join("/");n+=`;timeRange=${encodeURIComponent(t)}`}return n+`?project=${t}`},Mt='resource.type="gae_app"\n'+['protoPayload.resource:"/internal/"','protoPayload.resource:"/swarming/api/v1/bot/"','protoPayload.method!="GET"'].join(" OR ")+"\n",Bt=(t,e)=>{if(!t.createdTs)return[null,null];const s=new Date(t.createdTs.getTime()-6e4),i=e.completedTs||e.abandonedTs;return[s,i?new Date(i.getTime()+6e4):new Date]},Gt=(t,e,s,i,n)=>H` <tr ?hidden=${!e}> <td class=${"PENDING"===t.state?"bold":""}> ${"PENDING"===t.state?"Why Pending?":"Fleet Capacity"} </td> <td> ${Rt(e,"count",0)} <a href=${ot(n.dimensions)}>bots</a> could possibly run this task (${Rt(e,"busy",0)} busy, ${Rt(e,"dead",0)} dead, ${Rt(e,"quarantined",0)} quarantined, ${Rt(e,"maintenance",0)} maintenance) </td> </tr> <tr ?hidden=${!s||!i}> <td>Similar Load</td> <td> ${Rt(s)} <a href=${ct((n.dimensions||[]).concat({key:"state",value:"PENDING"}))} > similar pending tasks</a >, ${Rt(i)} <a href=${ct((n.dimensions||[]).concat({key:"state",value:"RUNNING"}))} > similar running tasks</a > </td> </tr> `,Rt=(t,e,s)=>!t||e&&void 0===t[e]?void 0!==s?s:H`<span class="italic">&lt;counting&gt</span>`:e?t[e]:t,Ut=t=>H` <tr> <td class="break-all"> <b class="dim_key">${t.key}:</b>${wt(t.value,t.key)} </td> </tr> `,Vt=(t,e,s)=>s.digest?H` <tr> <td>${t}</td> <td> <a href=${Et(e,s)} target="_blank"> ${s.digest.hash}/${s.digest.sizeBytes} </a> </td> </tr>`:"",qt=(t,e,s)=>t&&t.length?H` <tr> <td rowspan=${t.length+1}>${e}</td> </tr> ${t.map(Ft(s))}`:H` <tr> <td>${e}</td> <td>--</td> </tr>`,Ft=t=>e=>H` <tr> <td class="break-all">${t(e)}</td> </tr> `,Wt=(t,e,s)=>H` <tr> <td>${t.path}/</td> </tr> <tr> <td class="break-all"> <span class="cipd-header">Requested: </span>${t.requested} </td> </tr> <tr ?hidden=${!s}> <td class="break-all"> <span class="cipd-header">Actual: </span> <a href=${function(t,e){if(!t||!e)return;const s=t.split(":");return 2===s.length?`${e}/p/${s[0]}/+/${s[1]}`:void 0}(t.actual,e.server)} target="_blank" rel="noopener" > ${t.actual} </a> </td> </tr> `,zt=(t,e,s)=>{if(!t._taskId||t._notFound)return"";let i=null,n=null,r=null;if(s&&s.botDimensions){for(const t of s.botDimensions)"gcp"==t.key&&(n=t.value[0]),"zone"==t.key&&(r=t.value.reduce(((t,e)=>t.length>e.length?t:e)));(i=s.botLogsCloudProject)&&(n=i)}const o=!!n;return H` <div class="title">Logs Information</div> <div class="horizontal layout wrap"> <table class="task-info left"> <tbody> <tr> <td>Task related server Logs</td> <td> <a href=${((t,e,s,i)=>{const n=Mt+e.slice(0,-1),[r,o]=Bt(s,i);return Ht(t,n,r,o)})(t._project_id,t._taskId,e,s)} target="_blank" > View on Cloud Console </a> </td> </tr> <tr> <td>Bot related server Logs</td> <td> <a href=${((t,e,s)=>{const i=Mt+s.botId,[n,r]=Bt(e,s);return Ht(t,i,n,r)})(t._project_id,e,s)} target="_blank" ?hidden=${!s.botId} > View on Cloud Console </a> <p ?hidden=${s.botId}>--</p> </td> </tr> <tr> <td>Bot Logs</td> <td> <a href=${((t,e,s,i)=>{const n=`labels."compute.googleapis.com/resource_name":"${(t=>{if(!t)return t;const e=t.split("--");if(2==e.length)return e[0];if(e.length>2)throw Error("Unable to parse composed bot_id: "+t);return t})(i.botId)}"`;let r,o;if(i.startedTs){r=new Date(i.startedTs.getTime()-6e4);const t=i.completedTs||i.abandonedTs;o=t?new Date(t.getTime()+6e4):new Date}return Ht(t,n,r,o)})(n,0,0,s)} target="_blank" ?hidden=${!o} > View on Cloud Console </a> <p ?hidden=${o}>--</p> </td> </tr> </tbody> </table> </div> `},jt=(t,e,s,i)=>{if(!t._taskId||t._notFound)return"";if(!s||!xt(s))return H` <div class="title">Task Execution</div> <div class="task-execution"> This space left blank until a bot is assigned to the task. </div> `;if(St(s))return H` <div class="title">Task was Deduplicated</div> <p class="deduplicated"> This task was deduplicated from task <a href=${ht(s.dedupedFrom)}>${s.dedupedFrom}</a>. For more information on deduplication, see <a href="https://chromium.googlesource.com/infra/luci/luci-py/+/master/appengine/swarming/doc/Detailed-Design.md#task-deduplication" > the docs</a >. </p>`;i.properties||(i.properties={});const n=s.botDimensions||[],r=i.properties.dimensions||[];for(const t of n){for(const e of r)e.key===t.key&&(t.highlight=!0);if(t.values=[],t.value)for(const e of t.value){const s={name:wt(e,t.key)};for(const i of r)i.key===t.key&&i.value===e&&(s.bold=!0);t.values.push(s)}}return H` <div class=title>Task Execution</div> <table class=task-execution> <tr> <td>Bot assigned to task</td> <td><a href=${function(t){if(t)return"/bot?id="+t}(s.botId)}>${s.botId}</td> </tr> <tr> <td>Bot idle since</td> <td>${s.human_botIdleSinceTs}</td> </tr> <tr> <td rowspan=${n.length+1}> Dimensions </td> </tr> ${n.map((t=>Xt(t,r)))} <tr> <td>Exit Code</td> <td>${s.exitCode}</td> </tr> <tr> <td>Failure</td> <td class=${s.failure?"failed_task":""}>${!!s.failure}</td> </tr> <tr> <td>Internal Failure</td> <td class=${s.internalFailure?"exception":""}>${s.internalFailure}</td> </tr> <tr> <td>Cost (USD)</td> <td>$${function(t){return t&&t.costsUsd&&t.costsUsd.length?t.costsUsd[0].toFixed(4):0}(s)}</td> </tr> ${((t,e,s)=>s?H` <tr> <td>${"Missing CAS Input(s)"}</td> <td class="exception"> ${(s||[]).map((t=>((t,e)=>H` <tr> <tr> <td> <b>Instance: </b> ${e.casInstance} </td> </tr> <tr> <td> <b>Digest: </b> <a href=${Et(t,e)} target='_blank'> ${e.digest.hash}/${e.digest.sizeBytes} </a> </td> </tr> </tr> `)(e,t)))} </td> </tr>`:"")(0,t._app._server_details.cas_viewer_server,s.missingCas)} ${((t,e)=>e?H` <tr> <td>${"Missing CIPD Package(s)"}</td> <td class="exception"> ${(e||[]).map((t=>(t=>H` <tr> <td> <b>Path: </b> ${t.path} </td> </tr> <tr> <td> <b>Package: </b> ${t.packageName} </td> </tr> <tr> <td> <b>Version: </b> ${t.version} </td> </tr> `)(t)))} </td> </tr> `:"")(0,s.missingCipd)} ${Vt("CAS Outputs",t._app._server_details.cas_viewer_server,s.casOutputRoot||{})} <tr> <td>Bot Version</td> <td>${s.botVersion}</td> </tr> <tr> <td>Server Version</td> <td>${s.serverVersions}</td> </tr> </table>`},Xt=(t,e)=>H` <tr> <td class=${t.highlight?"highlight":""}> <b class="dim_key">${t.key}:</b>${t.values.map(Jt)} </td> </tr> `,Jt=t=>H`<span class="break-all dim ${t.bold?"bold":""}" >${t.name}</span >`,Kt=t=>H`<div>${t}</div>`,Yt=t=>H` <tr> <td><input value=${t.key}></input></td> <td><input value=${t.value}></input></td> </tr> `,Qt=t=>H` <swarming-app id=swapp ?testing_offline=${t.testing_offline}> <header> <div class=title>Swarming Task Page</div> <aside class=hideable> <a href=/>Home</a> <a href=/botlist>Bot List</a> <a href=/tasklist>Task List</a> <a href=/bot>Bot Page</a> </aside> </header> <main class="horizontal layout wrap"> <h2 class=message ?hidden=${t.loggedInAndAuthorized}>${t._message}</h2> <div class="left grow" ?hidden=${!t.loggedInAndAuthorized}> ${(t=>!t._taskId||t._notFound?H` <div class=id_buttons> <input id=id_input placeholder="Task ID" @change=${t._updateID}></input> <span class=message>Enter a Task ID to get started.</span> </div>`:H` <div class=id_buttons> <input id=id_input placeholder="Task ID" @change=${t._updateID}></input> <button title="Retry the task" @click=${t._promptRetry} class=retry ?hidden=${!function(t){return t&&t.properties&&t.properties.idempotent}(t._request)}>retry</button> <button title="Re-queue the task, but don't run it automatically" @click=${t._promptDebug} class=debug>debug</button> <button title="Cancel a pending task, so it does not start" ?hidden=${"PENDING"!==t._result.state} ?disabled=${!t.permissions.cancel_task} @click=${t._promptCancel} class=cancel>cancel</button> <button title="Kill a running task, so it stops as soon as possible" ?hidden=${"RUNNING"!==t._result.state} ?disabled=${!t.permissions.cancel_task} @click=${t._promptCancel} class=kill>kill</button> </div>`)(t)} <h2 class=not_found ?hidden=${!t._notFound||!t._taskId}> Task not found </h2> ${(t=>!t._taskId||t._notFound?"":t._request.taskSlices&&t._request.taskSlices.length>1?H` <div class="slice-picker"> ${t._request.taskSlices.map(((e,s)=>((t,e)=>H` <div class="tab" ?selected=${t._currentSliceIdx===e} @click=${()=>t._setSlice(e)} > Task Slice ${e+1} </div> `)(t,s)))} </div>`:"")(t)} ${((t,e,s,i)=>!t._taskId||t._notFound?"":(i.properties||(i.properties={}),H` <table class="task-info request-info ${function(t,e){return t&&e&&-1!==t._currentSliceIdx&&t._currentSliceIdx!==e.currentTaskSlice?"inactive":""}(t,s)}"> <tbody> <tr> <td>Name</td> <td>${e.name}</td> </tr> ${((t,e,s)=>H` <tr> <td>State</td> <td class=${function(t){if(!t||!t.state)return"";const e=t.state;return Tt.has(e)?"exception":"BOT_DIED"===e?"bot_died":"CLIENT_ERROR"===e?"client_error":yt.has(e)?"pending_task":"COMPLETED"===e&&t.failure?"failed_task":""}(s)}> ${function(t,e){if(!t||!t.state)return"";if(void 0!==e&&t.currentTaskSlice!==e)return"THIS SLICE DID NOT RUN. Select another slice above.";const s=t.state;return"COMPLETED"===s?t.failure?"COMPLETED (FAILURE)":St(t)?"COMPLETED (DEDUPED)":"COMPLETED (SUCCESS)":s}(s,t._currentSliceIdx)} </td> </tr> ${Gt(s,t._capacityCounts[t._currentSliceIdx],t._pendingCounts[t._currentSliceIdx],t._runningCounts[t._currentSliceIdx],t._currentSlice.properties||{})} <tr ?hidden=${!s.dedupedFrom} class="highlighted"> <td><b>Deduped From</b></td> <td> <a href=${ht(s.dedupedFrom)} target="_blank"> ${s.dedupedFrom} </a> </td> </tr> <tr ?hidden=${!s.dedupedFrom}> <td>Deduped On</td> <td title=${e.createdTs}>${e.human_createdTs}</td> </tr> `)(t,e,s)} ${((t,e,s)=>H` <tr> <td>Priority</td> <td>${t.priority}</td> </tr> <tr> <td>Wait for Capacity</td> <td>${!!s.waitForCapacity}</td> </tr> <tr> <td>Slice Scheduling Deadline</td> <td>${function(t,e){if(!e.createdTs)return"";const s=1e3*t.expirationSecs;return rt(new Date(e.createdTs.getTime()+s))}(s,t)}</td> </tr> <tr> <td>User</td> <td>${t.user||"--"}</td> </tr> <tr> <td>Authenticated</td> <td>${t.authenticated}</td> </tr> <tr ?hidden=${!t.serviceAccount}> <td>Service Account</td> <td>${t.serviceAccount}</td> </tr> <tr ?hidden=${!t.realm}> <td>Realm</td> <td>${t.realm}</td> </tr> <tr ?hidden=${!s.properties.secretBytes}> <td>Has Secret Bytes</td> <td title="The secret bytes are present on the machine, but not in the UI/API" > true </td> </tr> <tr ?hidden=${!t.parentTaskId}> <td>Parent Task</td> <td> <a href=${ht(t.parentTaskId)}> ${t.parentTaskId} </a> </td> </tr> <tr ?hidden=${!e}> <td>Child Tasks</td> <td> <a href=${ct([{key:"parent_task_id-tag",value:e.runId}],[],e.startedTs,e.completedTs)} > Task List </a> </td> </tr> `)(e,s,i)} ${(t=>H` <tr> <td rowspan=${t.length+1}> Dimensions <br /> <a title="The list of bots that matches the list of dimensions" href=${ot(t)} >Bots</a > <a title="The list of tasks that matches the list of dimensions" href=${ct(t)} >Tasks</a > </td> </tr> ${t.map(Ut)} `)(i.properties.dimensions||[])} ${Vt("CAS Inputs",t._app._server_details.cas_viewer_server,i.properties.casInputRoot||{})} <tr ?hidden=${!s.resultdbInfo}> <td>ResultDB</td> <td>Enabled</td> </tr> ${qt(i.properties.outputs,"Expected outputs",(t=>t))} ${(t=>t&&t.source_revision?H` <tr> <td>Associated Commit</td> <td> <a href=${t.source_repo.replace("%s",t.source_revision)}> ${t.source_revision.substring(0,12)} </a> </td> </tr> `:"")(e.tagMap)} <tr class="details"> <td>More Details</td> <td> <button @click=${t._toggleDetails} ?hidden=${t._showDetails}> <add-circle-outline-icon-sk></add-circle-outline-icon-sk> </button> <button @click=${t._toggleDetails} ?hidden=${!t._showDetails}> <remove-circle-outline-icon-sk></remove-circle-outline-icon-sk> </button> </td> </tr> </tbody> <tbody ?hidden=${!t._showDetails}> ${((t,e,s)=>H` <tr> <td>Command</td> <td class="code break-all"> ${(t.command||[]).join(" ")||"--"} </td> </tr> <tr> <td>Relative Cwd</td> <td class="code break-all">${t.relativeCwd||"--"}</td> </tr> ${qt(e,"Environment Vars",(t=>t.key+"="+t.value))} ${qt(s,"Environment Prefixes",(t=>t.key+"="+t.value.join(":")))} <tr> <td>Idempotent</td> <td>${!!t.idempotent}</td> </tr> `)(i.properties,i.properties.env||[],i.properties.envPrefixes||[])} ${qt(e.tags,"Tags",(t=>t))} <tr> <td>Execution timeout</td> <td> ${at(i.properties.executionTimeoutSecs)} </td> </tr> <tr> <td>I/O timeout</td> <td>${at(i.properties.ioTimeoutSecs)}</td> </tr> <tr> <td>Grace period</td> <td>${at(i.properties.gracePeriodSecs)}</td> </tr> ${((t,e)=>{if(!t)return H` <tr> <td>Uses CIPD</td> <td>false</td> </tr>`;const s=(t=JSON.parse(JSON.stringify(t))).packages||[],i=e.cipdPins&&e.cipdPins.packages||[];for(let t=0;t<s.length;t++){const e=s[t];e.requested=`${e.packageName}:${e.version}`,i[t]&&(e.actual=`${i[t].packageName}:${i[t].version}`)}let n="(available when task is run)";e.cipdPins&&e.cipdPins.clientPackage&&(n=e.cipdPins.clientPackage.packageName);let r=s.length;return i.length?r*=3:r*=2,r+=1,H` <tr> <td>CIPD server</td> <td> <a href=${t.server}>${t.server}</a> </td> </tr> <tr> <td>CIPD version</td> <td class="break-all"> ${t.clientPackage&&t.clientPackage.version} </td> </tr> <tr> <td>CIPD package name</td> <td>${n}</td> </tr> <tr> <td rowspan=${r}>CIPD packages</td> </tr> ${s.map((e=>Wt(e,t,!!i.length)))} `})(i.properties.cipdInput,s)} ${qt(i.properties.caches,"Named Caches",(t=>t.name+":"+t.path))} </tbody> </table> `))(t,t._request,t._result,t._currentSlice)} ${((t,e,s)=>{if(!t._taskId||t._notFound||St(s))return"";const i=s.performanceStats||{};return H` <div class="title">Task Timing Information</div> <div class="horizontal layout wrap"> <table class="task-info task-timing left"> <tbody> <tr> <td>Created</td> <td title=${e.createdTs}>${e.human_createdTs}</td> </tr> <tr ?hidden=${!xt(s)}> <td>Started</td> <td title=${s.startedTs}>${s.human_startedTs}</td> </tr> <tr> <td>Scheduling Deadline</td> <td>${function(t){if(!t.createdTs)return"";const e=1e3*t.expirationSecs;return rt(new Date(t.createdTs.getTime()+e))}(e)}</td> </tr> <tr ?hidden=${!s.completedTs}> <td>Completed</td> <td title=${s.completedTs}>${s.human_completedTs}</td> </tr> <tr ?hidden=${!s.abandonedTs}> <td>Abandoned</td> <td title=${s.abandonedTs}>${s.human_abandonedTs}</td> </tr> <tr> <td>Last updated</td> <td title=${s.modifiedTs}>${s.human_modifiedTs}</td> </tr> <tr> <td>Pending Time</td> <td class="pending">${s.human_pending}</td> </tr> <tr> <td>Total Overhead</td> <td class="overhead"> ${at(i.botOverhead)} </td> </tr> <tr> <td>Running Time</td> <td class="running" title="An asterisk indicates the task is still running and thus the time is dynamic." > ${s.human_duration} </td> </tr> </tbody> </table> <!-- Overheads calculated from task result is not accurate. It contains only the overheads for cipd package installation, task inputs download, task outputs upload. But there are other overheads that are not negligible, such as named cache install/uninstall, removing working dirs. <div class=right> <stacked-time-chart labels='["Pending", "Overhead", "Running", "Overhead"]' colors='["#E69F00", "#D55E00", "#0072B2", "#D55E00"]' .values=${function(t){let e=0,s=0;return t.performanceStats&&(s=t.performanceStats.isolatedUpload&&t.performanceStats.isolatedUpload.duration||0,e=t.performanceStats.botOverhead-s),[t.pending,e,t.duration,s].map((function(t){return t?Math.round(10*t)/10:0}))}(s)}> </stacked-time-chart> </div> --> </div> `})(t,t._request,t._result)} ${zt(t,t._request,t._result)} ${jt(t,t._request,t._result,t._currentSlice)} ${((t,e)=>t._taskId&&!t._notFound&&e?H` <div class="title">Performance Stats</div> <table class="performance-stats"> <tr> <td title="This includes time taken to download inputs, isolate outputs, and setup CIPD" > Total Overhead </td> <td>${at(e.botOverhead||0)}</td> </tr> <tr> <td>Cache trimming before the task</td> <td>${at(e.cacheTrim.duration||0)}</td> </tr> <tr> <td>Installing CIPD packages</td> <td> ${at(e.packageInstallation.duration||0)} </td> </tr> <tr> <td>Installing Named Caches</td> <td> ${at(e.namedCachesInstall.duration||0)} </td> </tr> <tr> <td>Uninstalling Named Caches</td> <td> ${at(e.namedCachesUninstall.duration||0)} </td> </tr> <tr> <td>Downloading Inputs</td> <td> ${at(e.isolatedDownload.duration||0)} </td> </tr> <tr> <td>Uploading Outputs</td> <td>${at(e.isolatedUpload.duration||0)}</td> </tr> <tr> <td>Cleanup directories</td> <td>${at(e.cleanup.duration||0)}</td> </tr> <tr> <td>Initial bot cache</td> <td> ${e.isolatedDownload.initialNumberItems||0} items; ${nt(e.isolatedDownload.initialSize||0)} </td> </tr> <tr> <td>Inputs (downloaded)</td> <td> ${e.isolatedDownload.numItemsCold||0} items; ${nt(e.isolatedDownload.totalBytesItemsCold||0)} </td> </tr> <tr> <td>Inputs (cached)</td> <td> ${e.isolatedDownload.numItemsHot||0} items; ${nt(e.isolatedDownload.totalBytesItemsHot||0)} </td> </tr> <tr> <td>Outputs (uploaded)</td> <td> ${e.isolatedUpload.numItemsCold||0} items; ${nt(e.isolatedUpload.totalBytesItemsCold||0)} </td> </tr> <tr> <td>Outputs (cached)</td> <td> ${e.isolatedUpload.numItemsHot||0} items; ${nt(e.isolatedUpload.totalBytesItemsHot||0)} </td> </tr> </table>`:"")(t,t._result.performanceStats)} ${((t,e)=>{if(!t._taskId||t._notFound)return"";const s=e.properties&&e.properties.casInputRoot||{},i=s.digest&&`${s.digest.hash}/${s.digest.sizeBytes}`,n=window.location.hostname;return H` <div class="title">Reproducing the task locally</div> <div class="reproduce"> <div ?hidden=${!i}> <div>Download inputs files into directory <i>foo</i>:</div> <div class="code bottom_space"> # (if needed, use "\\\${platform}" as-is) cipd install "infra/tools/luci/cas/\\\${platform}" -root bar<br /> # (if needed) ./bar/cas login<br /> ./bar/cas download -cas-instance ${s.casInstance} -digest ${i} -dir foo </div> </div> <div>Run this task locally:</div> <div class="code bottom_space"> # (if needed, use "\\\${platform}" as-is) cipd install "infra/tools/luci/swarming/\\\${platform}" -root bar<br /> # (if needed) ./bar/swarming login<br /> # '-realm' is only needed if resultdb is enabled for the task.<br /> # Please use a realm that has 'role/resultdb.invocationCreator' in the realms.cfg of your project.<br /> mkdir repro_dir && cd repro_dir<br /> ../bar/swarming reproduce -S ${n} -realm project:foo ${t._taskId} </div> <div>Download output results into directory <i>foo</i>:</div> <div class="code bottom_space"> # (if needed, use "\\\${platform}" as-is) cipd install "infra/tools/luci/swarming/\\\${platform}" -root bar<br /> # (if needed) ./bar/swarming login<br /> mkdir collect_dir && cd collect_dir<br /> ../bar/swarming collect -S ${n} -output-dir=foo ${t._taskId} </div> </div> `})(t,t._currentSlice)} </div> <div class="right grow" ?hidden=${!t.loggedInAndAuthorized}> ${(t=>!t._taskId||t._notFound?"":H` <div class="horizontal layout"> <div class="output-picker"> <div class="tab" selected>Raw Output</div> <div class="tab" ?hidden=${!function(t){if(!t||!t._request||!t._request.tagMap)return!1;const e=t._request.tagMap;return e.allow_milo||e.luci_project}(t)}> <a rel="noopener" target="_blank" href=${M(function(t){if(!t||!t._request||!t._request.tagMap)return;const e=t._request.tagMap,s=e.milo_host;let i=e.log_location;if(i&&s){if(-1!==(i=i.replace("logdog://","")).indexOf(Ct)){if(!t._result||!t._result.runId)return;i=i.replace(Ct,t._result.runId)}return s.replace("%s",i)}const n=t.serverDetails.display_server_url_template;return n&&t._taskId?n.replace("%s",t._taskId):void 0}(t))} > Rich Output </a> </div> <checkbox-sk id="wide_logs" ?checked=${t._wideLogs} @click=${t._toggleWidth} > </checkbox-sk> <span>Full Width Logs</span> </div> </div> <div class="code stdout tabbed ${t._wideLogs?"wide":"break-all"}"> ${t._stdout.map(Kt)} </div>`)(t)} </div> </main> <footer></footer> <dialog-pop-over id=retry> <div class='retry-dialog content'> ${((t,e)=>{const s=e.dimensions||[];return H` <div class=prompt> <h2> Are you sure you want to ${t._isPromptDebug?"debug":"retry"} task ${t._taskId}? </h2> <div> <div class=ib ?hidden=${!t._isPromptDebug}> <span>Lease Duration</span> <input id=lease_duration value=4h></input> </div> <div class=ib> <checkbox-sk class=same-bot ?disabled=${!xt(t._result)} ?checked=${t._useSameBot} @click=${t._toggleSameBot}> </checkbox-sk> <span>Run task on the same bot</span> </div> <br> </div> <div>If you want to modify any dimensions (e.g. specify a bot's id), do so now.</div> <table ?hidden=${t._useSameBot}> <thead> <tr> <th>Key</th> <th>Value</th> </tr> </thead> <tbody id=retry_inputs> ${s.map(Yt)} ${Yt({key:"",value:""})} </tbody> </table> </div>`})(t,t._currentSlice.properties||{})} <div class="horizontal layout end"> <button @click=${t._closePopups} class=cancel tabindex=0>Cancel</button> <button @click=${t._promptCallback} class=ok tabindex=0>OK</button> </div> </div> </dialog-pop-over> <dialog-pop-over id=cancel> <div class='cancel-dialog content'> Are you sure you want to ${t._prompt} task ${t._taskId}? <div class="horizontal layout end"> <button @click=${t._closePopups} class=cancel tabindex=0>NO</button> <button @click=${t._promptCallback} class=ok tabindex=0>YES</button> </div> </div> </dialog-pop-over> </swarming-app> `;window.customElements.define("task-page",class extends Ot{constructor(){super(Qt),this._taskId="",this._showDetails=!1,this._wideLogs=!1,this._urlParamsLoaded=!1;const t=location.hostname.indexOf(".appspot.com");this._project_id=location.hostname.substring(0,t),this._stateChanged=q((()=>({id:this._taskId,d:this._showDetails,w:this._wideLogs})),(t=>{this._taskId=t.id||this._taskId,this._showDetails=t.d,this._wideLogs=t.w,this._urlParamsLoaded=!0,this._fetch(),this.render()})),this._request={},this._result={},this._stdout=[],this._stdoutOffset=0,this._currentSlice={},this._currentSliceIdx=-1,this._notFound=!1,this._extraTries=[],this._capacityCounts=[],this._pendingCounts=[],this._runningCounts=[],this._message="You must sign in to see anything useful.",this._fetchController=null,this._promptCallback=()=>{},this._isPromptDebug=!1,this._useSameBot=!1,this._logFetchPeriod=1e4}connectedCallback(){super.connectedCallback(),this._loginEvent=t=>{this._fetch(),this.render()},this.addEventListener("log-in",this._loginEvent),this.render()}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("log-in",this._loginEvent)}_cancelTask(){let t=!1;"RUNNING"===this._result.state&&(t=!0),this.app.addBusyTasks(1),this._createTasksService().cancel(this._taskId,t).then((t=>{this._closePopups(),n("Request sent",4e3),this.render(),this.app.finishedTask()})).catch((t=>this.prpcError(t,"task/cancel")))}_closePopups(){this._promptCallback=()=>{},e("dialog-pop-over",this).map((t=>t.hide()))}_collectDimensions(){const t=[];if(this._useSameBot)t.push({key:"id",value:It(this._result.botDimensions,"id")},{key:"pool",value:It(this._result.botDimensions,"pool")});else{const s=e("#retry_inputs tr",this);for(const e of s){const s=e.children[0].firstElementChild.value,i=e.children[1].firstElementChild.value;s&&i&&t.push({key:s,value:i})}if(!t.length)return n("You must specify some dimensions (pool is required)",6e3),null;if(!It(t,"pool"))return n("The pool dimension is required"),null}return t}_debugTask(){const t={expiration_secs:this._request.expirationSecs,name:`leased to ${this.profile.email} for debugging`,pool_task_template:3,priority:20,properties:this._currentSlice.properties,realm:this._request.realm,service_account:this._request.serviceAccount,tags:["debug_task:1"],user:this.profile.email},e=function(t){let e=t.slice(0,-1);if(!/[1-9][0-9]*/.test(e))return null;switch(e=parseInt(e),t.slice(-1)){case"h":e*=60;case"m":e*=60;case"s":break;default:return null}return e}(i("#lease_duration").value);t.properties.command=["python3","-c",`import os, sys, time\nprint('Mapping task: ${location.origin}/task?id=${this._taskId}')\nprint('Files are mapped into: ' + os.getcwd())\nprint('')\nprint('Bot id: ' + os.environ['SWARMING_BOT_ID'])\nprint('Bot leased for: ${e} seconds')\nprint('How to access this bot: http://go/swarming-ssh')\nprint('When done, reboot the host')\nprint('')\nprint('Some tests may fail without the following env vars set:')\nprint('PATH=' + os.environ['PATH'])\nprint('LUCI_CONTEXT=' + os.environ['LUCI_CONTEXT'])\nsys.stdout.flush()\ntime.sleep(${e})`],t.properties.execution_timeout_secs=e,t.properties.io_timeout_secs=e;const s=this._collectDimensions();s&&(t.properties.dimensions=s,this._newTask(t),this._closePopups())}_fetch(){if(!this.loggedInAndAuthorized||!this._urlParamsLoaded||!this._taskId)return;this._fetchController&&this._fetchController.abort(),this._fetchController=new AbortController;const t={headers:{authorization:this.authHeader},signal:this._fetchController.signal};this.app._fetchPermissions(t,{task_id:this._taskId}),this._fetchTaskInfo(t),this._fetchStdOut(t)}_fetchTaskInfo(t){this.app.addBusyTasks(2);let e=-1;const s=this._createTasksService();s.request(this._taskId).then((s=>{this._notFound=!1,this._request=function(t){if(!t)return{};t.tagMap={},t.tags=t.tags||[];for(const e of t.tags){const s=e.split(":",1)[0],i=e.substring(s.length+1);t.tagMap[s]=i}return Dt.forEach((e=>{lt(t,e)})),t}(s),this._fetchCounts(this._request,t),e>=0?this._setSlice(e):this.render(),this.app.finishedTask()})).catch((t=>{404===t.status&&(this._request={},this._notFound=!0,this.render()),this.fetchError(t,"task/request")})),this._extraTries=[],s.result(this._taskId,!0).then((t=>{this._result=function(t){if(!t)return{};Dt.forEach((e=>{lt(t,e)}));const e=new Date;!t.duration&&"RUNNING"===t.state&&t.startedTs?t.duration=(e-t.startedTs)/1e3:!t.duration&&"BOT_DIED"===t.state&&t.startedTs&&t.abandonedTs&&(t.duration=(t.abandonedTs-t.startedTs)/1e3),t.human_duration=at(t.duration),"RUNNING"===t.state?t.human_duration+="*":"BOT_DIED"===t.state&&(t.human_duration+=" -- died");const s=t.startedTs||t.abandonedTs||new Date;return t.createdTs?s<=t.createdTs?(t.pending=0,t.human_pending="0s"):(t.pending=(s-t.createdTs)/1e3,t.human_pending=function(t,e){return t?(e||(e=new Date),it((e.getTime()-t.getTime())/1e3)||"0s"):"eons"}(t.createdTs,s)):(t.pending=0,t.human_pending=""),t.currentTaskSlice=parseInt(t.currentTaskSlice)||0,t}(t),e=+this._result.currentTaskSlice,this._setSlice(e),this.app.finishedTask()})).catch((t=>this.prpcError(t,"task/result")))}_fetchStdOut(t){this.app.addBusyTasks(1);let e="";const s=()=>{this._createTasksService().stdout(this._taskId,this._stdoutOffset,102400).then((i=>{e||(e=i.state);const n=i.output?function(t){return new TextDecoder("utf-8",{fatal:!1}).decode(function(t){const e=atob(t);return Uint8Array.from(e,(t=>t.codePointAt(0)))}(t))}(i.output):"",r=new Blob([n]).size;this._stdoutOffset+=r;const o=n.replace(/\r\n/g,"\n"),a=o.lastIndexOf("\n");let d=o,l="";-1!==a&&(d=o.substring(0,a+1),l=o.substring(a+1)),this._stdout.length&&!this._stdout[this._stdout.length-1].endsWith("\n")?(this._stdout[this._stdout.length-1]+=d,l&&this._stdout.push(l)):(this._stdout.push(d),l&&this._stdout.push(l)),this.render(),i.state!==e&&this._fetchTaskInfo(t),"RUNNING"===i.state||"PENDING"===i.state?r<102400?setTimeout(s,this._logFetchPeriod):s():r<102400?this.app.finishedTask():s(),e=i.state})).catch((t=>this.prpcError(t,"task/request")))};s()}_fetchCounts(t,e){const s=t.taskSlices.length;this.app.addBusyTasks(3*s),this._capacityCounts=[],this._capacityCounts.fill(void 0,0,s),this._pendingCounts=[],this._pendingCounts.fill(void 0,0,s),this._runningCounts=[],this._pendingCounts.fill(void 0,0,s);for(let e=0;e<s;e++){const s=[],i=[],n=e;for(const n of t.taskSlices[e].properties.dimensions)i.push(n),s.push(`${n.key}:${n.value}`);this._createBotService().count(i).then((t=>{this._capacityCounts[n]=t,this.render(),this.app.finishedTask()})).catch((t=>this.prpcError(t,"bots/count slice "+e,!0)));const r=new Date;r.setSeconds(0),r.setDate(r.getDate()-1);const o=this._createTasksService();o.count({tags:s,start:r,state:"QUERY_RUNNING"}).then((t=>{this._runningCounts[n]=t.count||"0",this.render(),this.app.finishedTask()})).catch((t=>this.fetchError(t,"tasks/running slice "+e,!0))),o.count({tags:s,start:r,state:"QUERY_PENDING"}).then((t=>{this._pendingCounts[n]=t.count||"0",this.render(),this.app.finishedTask()})).catch((t=>this.prpcError(t,"tasks/pending slice "+e,!0)))}}_newTask(t){t.properties.idempotent=!1,this.app.addBusyTasks(1),this._createTasksService().new(t).then((t=>{t&&t.taskId&&(this._taskId=t.taskId,this._stateChanged(),this._fetch(),this.render(),this.app.finishedTask())})).catch((t=>this.prpcError(t,"newtask")))}_promptCancel(){this._prompt="cancel","RUNNING"===this._result.state&&(this._prompt="kill"),this._promptCallback=this._cancelTask,this.render(),i("dialog-pop-over#cancel",this).show(),i("dialog-pop-over#cancel button.cancel",this).focus()}_promptDebug(){this._request?(this._isPromptDebug=!0,this._useSameBot=!1,this._promptCallback=this._debugTask,this.render(),i("dialog-pop-over#retry",this).show(),i("dialog-pop-over#retry button.cancel",this).focus()):n("Task not yet loaded",3e3)}_promptRetry(){this._request?(this._isPromptDebug=!1,this._useSameBot=!1,this._promptCallback=this._retryTask,this.render(),i("dialog-pop-over#retry",this).show(),i("dialog-pop-over#retry button.cancel",this).focus()):n("Task not yet loaded",3e3)}render(){super.render(),i("#id_input",this).value=this._taskId}_retryTask(){const t={expiration_secs:this._request.expirationSecs,name:this._request.name+" (retry)",pool_task_template:3,priority:this._request.priority,properties:this._currentSlice.properties,service_account:this._request.serviceAccount,tags:this._request.tags,user:this.profile.email,resultdb:{enable:Boolean(this._result.resultdbInfo)},realm:this._request.realm};t.tags.push("retry:1");const e=this._collectDimensions();e&&(t.properties.dimensions=e,this._newTask(t),this._closePopups())}_setSlice(t){this._currentSliceIdx=t,this._request.taskSlices&&(this._currentSlice=this._request.taskSlices[t],this.render())}_toggleDetails(t){this._showDetails=!this._showDetails,this._stateChanged(),this.render()}_toggleSameBot(t){t.preventDefault(),xt(this._result)&&(this._useSameBot=!this._useSameBot,this.render())}_toggleWidth(t){t.preventDefault(),this._wideLogs=!this._wideLogs,this._stateChanged(),this.render()}_updateID(t){const e=i("#id_input",this);this._taskId=e.value,this._stdout=[],this._stdoutOffset=0,this._stateChanged(),this._fetch(),this.render()}})})()})();