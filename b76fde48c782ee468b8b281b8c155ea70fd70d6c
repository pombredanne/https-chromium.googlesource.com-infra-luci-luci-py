{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f83c3461_c9ddb116",
        "filename": "appengine/swarming/handlers_prpc.py",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "we should not be raising endpoints exceptions in pRPC code\n\ncan we switch all such manually raised exceptions here to use classes from handlers_exceptions.py instead, since we have them for some reason already",
      "range": {
        "startLine": 33,
        "startChar": 11,
        "endLine": 33,
        "endChar": 39
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a887ca69_95cc3d56",
        "filename": "appengine/swarming/handlers_prpc.py",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "I\u0027m not a fan of this duplication. Realm checks in /tasks/new are very non-trivial and we should not be copy-pasting them. These copies will also have tendency to diverge.\n\nCan you remind me what\u0027s wrong with moving all the logic into a single place (e.g. here) and then making Endpoints code be simple shim that takes proto response and converts it to protorpc crap?\n\nAlternatively, how about we move *all* the logic (including permission checks) into some base layer that responds with some encoding-agnosting objects (like ndb entities), and then separately wrap it twice to get protobuf RPC and endpoints RPC.",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 39
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfe5abd4_fee4ac0b",
        "filename": "appengine/swarming/message_conversion_prpc.py",
        "patchSetId": 14
      },
      "lineNbr": 144,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "I\u0027m not convinced this is better than just\n\n```\nreturn swarming_api_pb2.BotInfoResponse(\n   external_ip \u003d bot_info.external_ip,\n   ...\n   first_seen_ts \u003d _date(bot_info.first_seen_ts),\n   ...\n   state \u003d json.dumps(...),\n   dimensions \u003d _string_list_pairs(bot_info.dimensions),\n)\n```\n\nThe same information is provided in the end in both cases (what kind of transformation to apply, e.g. transform `first_seen_ts` as date, and `dimensions` as string list pairs), but ObjectDerivedProtoFactory does it in complicated roundabout way with runtime cost.\n\nWhat advantages does ObjectDerivedProtoFactory have?",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 144,
        "endChar": 23
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "010d977b_68bcd95c",
        "filename": "appengine/swarming/prpc_helpers.py",
        "patchSetId": 14
      },
      "lineNbr": 9,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "please del, we aren\u0027t going to port this to python3 and `six` just complicates code",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 10
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed1fe59a_dfe5d1da",
        "filename": "appengine/swarming/prpc_helpers.py",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "why does it suddenly use CamelCase instead of a shake_case? \u003e_\u003c",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 20
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb40226_861b85db",
        "filename": "appengine/swarming/prpc_helpers.py",
        "patchSetId": 14
      },
      "lineNbr": 65,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-11-11T01:30:18Z",
      "side": 1,
      "message": "why?...\n\nIt is responsibility of pRPC server code to escape any output.",
      "range": {
        "startLine": 65,
        "startChar": 27,
        "endLine": 65,
        "endChar": 37
      },
      "revId": "b76fde48c782ee468b8b281b8c155ea70fd70d6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}