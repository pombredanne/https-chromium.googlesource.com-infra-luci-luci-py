{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b4a343b6_1b4facc3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T00:32:05Z",
      "side": 1,
      "message": "PTAL",
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed6391b8_58ef472b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T00:33:26Z",
      "side": 1,
      "message": "Seems like only your @chromium.org account is listed as an owner here, adding that instead.",
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8fc6463_0e87e82e",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-03-28T00:40:17Z",
      "side": 1,
      "message": "I wonder if this can be done using pywin32 COM instead of shelling out to powershell. See e.g. how get_audio() is implemented. `SELECT * FROM win32_controller` maybe?.. I don\u0027t have access to Windows right now to experiment.\n\nI don\u0027t like reliance on powershell, it is finicky (especially its \"execution policy\" stuff).",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 657,
        "endChar": 59
      },
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78ae87bf_a951e96e",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T00:41:36Z",
      "side": 1,
      "message": "Ack, I\u0027ll see if I can get pywin32 working on my Windows box and report back.",
      "parentUuid": "d8fc6463_0e87e82e",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 657,
        "endChar": 59
      },
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542feec0_90bf6f1e",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T18:24:17Z",
      "side": 1,
      "message": "I\u0027ve been unable to get `pywin32` to work, and basically all references I\u0027ve found online suggest using the `wmi` module, which depends on `pywin32`, for accessing WMI objects.\n\nHowever, I found a command that runs through a normal command prompt instead of powershell and gives us the same information - would switching to that be acceptable?\n\n`wmic path win32_videocontroller get /format:list`",
      "parentUuid": "78ae87bf_a951e96e",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 657,
        "endChar": 59
      },
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93425adf_ea8f349a",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T18:37:07Z",
      "side": 1,
      "message": "Uploaded a patchset using the new command for you to look at.",
      "parentUuid": "542feec0_90bf6f1e",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 657,
        "endChar": 59
      },
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bf456f0_a7672cf6",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-03-28T19:55:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93425adf_ea8f349a",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 657,
        "endChar": 59
      },
      "revId": "af80ad0771813084ba3ddf65ebf678743fe673a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}