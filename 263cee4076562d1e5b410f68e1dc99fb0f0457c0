{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83f14784_bdbf3951",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-06-28T17:00:46Z",
      "side": 1,
      "message": "+meiring@ for role definitions\n+vadimsh@ for luci auth approvals/rollout",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69160f68_abb050c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2023-06-30T06:00:49Z",
      "side": 1,
      "message": "Adding Yiwei to attention set.",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56ba3044_b14c70a9",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2023-06-29T01:22:57Z",
      "side": 1,
      "message": "maybe: Unlike the other permissions here, this is a project-scoped permission and  should only be called from the CQ recipe and maybe a few devs. Maybe lock this down further by putting it into a different role (baselineReader?) which we will grant only to the needed group.",
      "range": {
        "startLine": 165,
        "startChar": 6,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d5cf1e1_1153ad19",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-06-30T03:19:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56ba3044_b14c70a9",
      "range": {
        "startLine": 165,
        "startChar": 6,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be7c3cd6_c1c34324",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2023-06-30T06:00:15Z",
      "side": 1,
      "message": "Not done? (or not uploaded?)",
      "parentUuid": "1d5cf1e1_1153ad19",
      "range": {
        "startLine": 165,
        "startChar": 6,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99236f46_d9944076",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-06-30T07:00:02Z",
      "side": 1,
      "message": "sorry, upload had failed before. uploaded now.",
      "parentUuid": "be7c3cd6_c1c34324",
      "range": {
        "startLine": 165,
        "startChar": 6,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcddd2da_efbc891b",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2023-06-29T01:22:57Z",
      "side": 1,
      "message": "Does LUCI CV know the project it started the tryjobs in (e.g. chromium, chrome)?\n\nIf so -\u003e add \u0027role/resultdb.baselineCreator\u0027 here to allow LUCI CV to make the MarkInvocationSubmitted RPC to ResultDB with auth.AsProject?\n\nIf not -\u003e add \u0027role/resultdb.baselineCreator\u0027 at implicit_root_bindings (line 524) to allow LUCI CV to create baselines on any project when authenticating with auth.AsSelf. (Warning: risk of confused deputy problems, careful implementation required).",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a6b7450_8efb90ce",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-06-29T02:55:00Z",
      "side": 1,
      "message": "I\u0027m not familiar with the CV project just yet, but from a quick scan it seems tryjobs do have the capability to determine which LUCI project it was triggered from [1]. It seems to also be used for checking cross-project tryjob re-use.\n\n[1] https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/cv/internal/tryjob/model.go;l\u003d151;drc\u003d3cd0449af297561ae2d6f09e7ac52e3d42a3786a\n\nBased on this, save to take approach 1?",
      "parentUuid": "dcddd2da_efbc891b",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fee6cda_0ef434d8",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2023-06-29T06:28:46Z",
      "side": 1,
      "message": "[1] talks through a case where v8 project configures a chromium tryjob to run. LUCIProject() returns \"v8\" in this case.\n\nHowever, the chromium tryjob will be uploading test results to a realm in chromium (e.g. chromium:try), and this is the project that LUCI CV will need to access ResultDB with, not \"v8\".\n\nThat said, maybe you can still get at the builder project somehow? The description references a config \"chromium/try/linux_rel\", so somewhere in CV there might be the actual project for the tryjob?",
      "parentUuid": "3a6b7450_8efb90ce",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "740b005a_6489f907",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-06-30T03:19:47Z",
      "side": 1,
      "message": "+yiwzhang@ for any insight into project information through LUCI CV.",
      "parentUuid": "4fee6cda_0ef434d8",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcbdbe89_c024f7e0",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-07-06T21:02:02Z",
      "side": 1,
      "message": "Sorry for the late response. To the question, LUCI CV knows about the project that it starts the tryjobs in. LUCI CV, when scheduling a build in buildbucket, will always use the project scoped credential for the project managing the CL (i.e the example of LUCI CV use v8 project credential to schedule a chromium builder for a v8 CL). This is achieved by explicitly granting the `buildbucket.trigger` role to v8 in [chromium project config](https://chromium.googlesource.com/chromium/src/+/2106425b7ecd7b88cad2d6066b2e7ee68c98f8b1/infra/config/generated/luci/realms.cfg#555).\n\nI do think we should follow the same pattern here. Otherwise, everything will seems to be from chromium when accessing chromium resource even though the requester is actually from v8.",
      "parentUuid": "740b005a_6489f907",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea7dbc04_0d116ddd",
        "filename": "appengine/auth_service/realms/permissions.py",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2023-07-06T21:39:06Z",
      "side": 1,
      "message": "Thanks Yiwei. Just so we\u0027re all on the same page here, you\u0027re suggesting that we auth using the project associated with the change instead of the invocations themselves, is that correct?",
      "parentUuid": "bcbdbe89_c024f7e0",
      "revId": "263cee4076562d1e5b410f68e1dc99fb0f0457c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}