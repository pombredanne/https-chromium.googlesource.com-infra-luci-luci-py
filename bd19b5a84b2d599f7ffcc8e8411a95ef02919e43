{
  "comments": [
    {
      "key": {
        "uuid": "65cd591d_e99c738f",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 515,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "the function is named copytree, not CopyTree",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f708de8_96a4e567",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 515,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65cd591d_e99c738f",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f14bd3c2_154fd37a",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "Trailing i, this can\u0027t work.\n\nAlso, links are relative to the location of the directory containing the symlink, but opening a file is relative to the process current working directory, so this can\u0027t work too, you need to relativize the path.",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0a949f_d647a767",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:32:11Z",
      "side": 1,
      "message": "Did this work in the current tests? Before fixing this, we should make the failure reproduce in the tests.",
      "parentUuid": "f14bd3c2_154fd37a",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeb9872c_8a640874",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "It works with the current tests. I also ran some more tests on my computer with this structure: \ndir1{symlink1, file, dir2}\ndir2{symlink2, dir3}\ndir3{symlink3}\n\ncase 1: sl1 --\u003e sl2 --\u003e sl3 --\u003e file\ncase 2: sl3 --\u003e sl2 --\u003e sl1 --\u003e file\ncase 3: sl2 --\u003e sl1 --\u003e sl3 --\u003e file\n\nIn each case, I read the original symlink, resolved the final target, opened the target, and overwrote it with no errors. \n\nCan you give me a test case that would fail? I\u0027ll add that to the unit tests, and it\u0027ll help me fix the issue.",
      "parentUuid": "ab0a949f_d647a767",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df8fd63b_84590a23",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-28T15:54:31Z",
      "side": 1,
      "message": "Did anyone come up with a failure test case for this?",
      "parentUuid": "aeb9872c_8a640874",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc940743_3f8d1a86",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-28T17:44:28Z",
      "side": 1,
      "message": "call os.chdir before hand. That\u0027ll repro. Or probably just run the test from another directory, e.g.\n\n./tests/run_isolated_test.py",
      "parentUuid": "df8fd63b_84590a23",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6c81162_642339e6",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 521,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-28T20:03:06Z",
      "side": 1,
      "message": "I did that too. All tests pass.\nPrinting the paths in the tests I ran on my computer, it looks like the links are actually relative to the process\u0027s working directory.\n\n{dir1{dir2{dir3,sl3}}, sl1}\nsl3 --\u003e sl1\n\nWhen I print os.readlink(sl3), I get dir1/sl1, not ../../dir1/sl1",
      "parentUuid": "cc940743_3f8d1a86",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bcb8859_4c15aec2",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 527,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "This is not necessary, line 535 will throw the same way.",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ca41b03_fac3c946",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 527,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:32:11Z",
      "side": 1,
      "message": "Nice catch. We should make sure to comment that it will throw, and that this is desired.",
      "parentUuid": "1bcb8859_4c15aec2",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a2f878b_b9c05e4c",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 527,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ca41b03_fac3c946",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40bbd55c_485c9b3e",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "you could skip an unnecessary stat() by keeping a bool at line 521, e.g.\n\nsrc_is_symlink \u003d False\nwhile fs.islink(src):\n  src_is_symlink \u003d True\n  # expand symlink\n\nthen here;\n\nif src_is_symlink and fs.isdir(src):\n   ...",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3bd69d8_5c0bbaba",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40bbd55c_485c9b3e",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3551aceb_3da7f1da",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 547,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "FYI, the reason for using fs instead of os is to escape MAX_PATH on Windows. But it needs to be used consistently.",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aaa0aea_21f09cc1",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 547,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3551aceb_3da7f1da",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f062b25_f908eded",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 552,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-27T13:23:30Z",
      "side": 1,
      "message": "logging.warning(\u0027Path %s does not exist or is a broken symlink\u0027, src)",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4f233d_fab425e5",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 552,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:25:27Z",
      "side": 1,
      "message": "Maybe save orig_src outside of the \"try\" block so you can show both orig_src and src here?",
      "range": {
        "startLine": 552,
        "startChar": 72,
        "endLine": 552,
        "endChar": 75
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116f8d92_6ec178b5",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 552,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c4f233d_fab425e5",
      "range": {
        "startLine": 552,
        "startChar": 72,
        "endLine": 552,
        "endChar": 75
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44741459_45e792c6",
        "filename": "client/run_isolated.py",
        "patchSetId": 5
      },
      "lineNbr": 552,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f062b25_f908eded",
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c3adf1_a1b6ed56",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 973,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:25:27Z",
      "side": 1,
      "message": "Nit: link_outputs is hard to search for because it\u0027s a substring of link_otuputs_to_outdir. Perhaps run_link_outputs_test?",
      "range": {
        "startLine": 973,
        "startChar": 6,
        "endLine": 973,
        "endChar": 18
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc63cde2_4c9b2c55",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 973,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9c3adf1_a1b6ed56",
      "range": {
        "startLine": 973,
        "startChar": 6,
        "endLine": 973,
        "endChar": 18
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9841f85c_4d10934d",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:25:27Z",
      "side": 1,
      "message": "Shouldn\u0027t this be subdir_link/child_a? We\u0027re asking the bot to return subdir_link, so that\u0027s what we should see?",
      "range": {
        "startLine": 1029,
        "startChar": 9,
        "endLine": 1029,
        "endChar": 15
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddc174c9_93b56b7d",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Oh, so we want the directory that the symlink points to, but we want it renamed to the name of the symlink? In that case, the previous code was working! Removed the extra block from run_isolated.py. Also added another test case: symlink --\u003e symlink --\u003e dir containing multiple files.",
      "parentUuid": "9841f85c_4d10934d",
      "range": {
        "startLine": 1029,
        "startChar": 9,
        "endLine": 1029,
        "endChar": 15
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2e1bb27_b9c8e867",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T16:51:31Z",
      "side": 1,
      "message": "I think so - otherwise files and directories have different behaviours. Marc-Antoine, wdyt?",
      "parentUuid": "ddc174c9_93b56b7d",
      "range": {
        "startLine": 1029,
        "startChar": 9,
        "endLine": 1029,
        "endChar": 15
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9d22af3_3a4ce54c",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-03-28T17:44:28Z",
      "side": 1,
      "message": "In this specific case, yes it should be subdir_link. I think it\u0027s line 1027 that was incorrect.",
      "parentUuid": "a2e1bb27_b9c8e867",
      "range": {
        "startLine": 1029,
        "startChar": 9,
        "endLine": 1029,
        "endChar": 15
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d630eb_46e83f20",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-28T20:03:06Z",
      "side": 1,
      "message": "So, the current patch set is the right behavior, correct?",
      "parentUuid": "c9d22af3_3a4ce54c",
      "range": {
        "startLine": 1029,
        "startChar": 9,
        "endLine": 1029,
        "endChar": 15
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5088d421_a0f7927e",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1053,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:29:48Z",
      "side": 1,
      "message": "Is there any significance that in test_empty_dir, the expected name ends with a slack (\u0027subdir/\u0027) and here it doesn\u0027t?",
      "range": {
        "startLine": 1053,
        "startChar": 9,
        "endLine": 1053,
        "endChar": 26
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f019dceb_329409fe",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1053,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "No. It works both ways.",
      "parentUuid": "5088d421_a0f7927e",
      "range": {
        "startLine": 1053,
        "startChar": 9,
        "endLine": 1053,
        "endChar": 26
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "977dc192_e29d4539",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1053,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T16:51:31Z",
      "side": 1,
      "message": "Ok, maybe test it consistently then (either always with or always without). Maybe even make that two different tests (eg test_ignore_trailing_slashes)",
      "parentUuid": "f019dceb_329409fe",
      "range": {
        "startLine": 1053,
        "startChar": 9,
        "endLine": 1053,
        "endChar": 26
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39288bc6_88468b7a",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1053,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T17:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "977dc192_e29d4539",
      "range": {
        "startLine": 1053,
        "startChar": 9,
        "endLine": 1053,
        "endChar": 26
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cce4fba9_5b27d40c",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1092,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:29:48Z",
      "side": 1,
      "message": "nonexistent",
      "range": {
        "startLine": 1092,
        "startChar": 33,
        "endLine": 1092,
        "endChar": 45
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b3a525_0800489a",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1092,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cce4fba9_5b27d40c",
      "range": {
        "startLine": 1092,
        "startChar": 33,
        "endLine": 1092,
        "endChar": 45
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f12a91a_f98d54bf",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1102,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:29:48Z",
      "side": 1,
      "message": "Maybe add a test where we *also* ask for foo_file (or just modify this one)",
      "range": {
        "startLine": 1102,
        "startChar": 0,
        "endLine": 1102,
        "endChar": 43
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66122bf6_28da8724",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1102,
      "author": {
        "id": 1245214
      },
      "writtenOn": "2018-03-27T15:40:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f12a91a_f98d54bf",
      "range": {
        "startLine": 1102,
        "startChar": 0,
        "endLine": 1102,
        "endChar": 43
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "249f49ec_93e57fbe",
        "filename": "client/tests/run_isolated_test.py",
        "patchSetId": 5
      },
      "lineNbr": 1188,
      "author": {
        "id": 1161612
      },
      "writtenOn": "2018-03-27T13:29:48Z",
      "side": 1,
      "message": "??\n\nHonestly, I\u0027d be fine to completely revert this test - it basically verifies that we go through the output procedure *at all* so I don\u0027t really care if the test is comprehensive (the new tests handle those).",
      "range": {
        "startLine": 1188,
        "startChar": 6,
        "endLine": 1188,
        "endChar": 52
      },
      "revId": "bd19b5a84b2d599f7ffcc8e8411a95ef02919e43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}