{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "047b2f05_3583a484",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2023-03-20T21:33:04Z",
      "side": 1,
      "message": "lgtm with a comment",
      "revId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a86438c9_4eaedc02",
        "filename": "appengine/auth_service/gcs.py",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2023-03-20T21:33:04Z",
      "side": 1,
      "message": "Should we set streaming based on whether the size of data exceeds _GCS_CHUNK_SIZE or not?",
      "range": {
        "startLine": 128,
        "startChar": 15,
        "endLine": 128,
        "endChar": 29
      },
      "revId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c11ce02_d16245da",
        "filename": "appengine/auth_service/gcs.py",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2023-03-20T21:42:18Z",
      "side": 1,
      "message": "Saw the test. So latest.db will always be big? If so NVM this comment.",
      "parentUuid": "a86438c9_4eaedc02",
      "range": {
        "startLine": 128,
        "startChar": 15,
        "endLine": 128,
        "endChar": 29
      },
      "revId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "644bd124_43276c2e",
        "filename": "appengine/auth_service/gcs.py",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-03-20T21:46:06Z",
      "side": 1,
      "message": "Considered it. Decided against:\n1. I want to hit this code path in chrome-infra-auth-dev. It has smaller authdb size. By explicitly using streaming\u003dTrue, we still will go through the resumable uploads protocol (just with 2 requests instead of N).\n2. The only instance of chrome-infra-auth that really matters is the prod one, and it already has a larger authdb, so the code for uploading latest.db using multipart uploads will never be running for real, which will make it rot.",
      "parentUuid": "a86438c9_4eaedc02",
      "range": {
        "startLine": 128,
        "startChar": 15,
        "endLine": 128,
        "endChar": 29
      },
      "revId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "53a01068f20e8e83cea1d3cd05790c2ff64b064b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}