{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "babd654c_64cf2d4b",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1163,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2022-09-13T03:34:26Z",
      "side": 1,
      "message": "visited by the Tooth Fairy.",
      "range": {
        "startLine": 1163,
        "startChar": 45,
        "endLine": 1163,
        "endChar": 72
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0594fae1_1e9c3082",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-09-13T03:41:46Z",
      "side": 1,
      "message": "https://m.media-amazon.com/images/I/81xVxf51krL._SL1500_.jpg (NSFL)",
      "parentUuid": "babd654c_64cf2d4b",
      "range": {
        "startLine": 1163,
        "startChar": 45,
        "endLine": 1163,
        "endChar": 72
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb7cc279_7682a743",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1188,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2022-09-13T03:34:26Z",
      "side": 1,
      "message": "will this affect the UI handlers too?",
      "range": {
        "startLine": 1188,
        "startChar": 16,
        "endLine": 1188,
        "endChar": 21
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a46c0dcf_ebc713bd",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1188,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-09-13T03:41:46Z",
      "side": 1,
      "message": "No, they use a separate index on BotInfo in bot_management.py.\n\nIndexes here are actually more dynamic (in the previous implementation as well). If a bot is detected as dead or quarantined, it is kicked out of the index. It remains in BotInfo index, since we still need to show dead bots in the UI.",
      "parentUuid": "eb7cc279_7682a743",
      "range": {
        "startLine": 1188,
        "startChar": 16,
        "endLine": 1188,
        "endChar": 21
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c0b9ba_adb81b2b",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1210,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2022-09-13T03:34:26Z",
      "side": 1,
      "message": "why not index it then? IIUC this is basically an epoch?",
      "range": {
        "startLine": 1210,
        "startChar": 30,
        "endLine": 1210,
        "endChar": 47
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "379d0f6d_9f96d3b5",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 6
      },
      "lineNbr": 1210,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-09-13T03:41:46Z",
      "side": 1,
      "message": "There are no queries that would use this index.\n\nthe algo is:\n\n```\n  @txn\n  def enqueue():\n     ...\n     ent.rescan_counter +\u003d 1\n     transactionally_enqueue({\u0027rescan_counter\u0027: ent.rescan_counter})\n     ent.put()\n     \n  def tq_task(rescan_counter):\n    ent \u003d get()\n    if ent.rescan_counter !\u003d rescan_counter:\n      return # there\u0027s a \"newer\" task in flight already\n    ...\n```",
      "parentUuid": "b4c0b9ba_adb81b2b",
      "range": {
        "startLine": 1210,
        "startChar": 30,
        "endLine": 1210,
        "endChar": 47
      },
      "revId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66e4ed9edc48b1bcba9518a59b7af44a12dfd44f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}