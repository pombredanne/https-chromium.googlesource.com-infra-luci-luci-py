{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69ff6a24_ae46be07",
        "filename": "appengine/swarming/proto/plugin/plugin.proto",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2024-03-29T00:53:12Z",
      "side": 1,
      "message": "Is this needed here?",
      "range": {
        "startLine": 25,
        "startChar": 7,
        "endLine": 25,
        "endChar": 20
      },
      "revId": "0d63b0d8475f03ebf42ccf8d5dd3710039ce9e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1782d77a_35d00f7f",
        "filename": "appengine/swarming/proto/plugin/plugin.proto",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2024-03-29T18:01:55Z",
      "side": 1,
      "message": "Quota Scheduler needs these values. I considered just replacing enums with magical constants, but the result ends up looking very mysterious. \n\nhttps://source.chromium.org/chromium/infra/infra/+/main:go/src/infra/qscheduler/service/app/state/operations/operations.go;l\u003d212?q\u003dCATEGORY_EXECUTION_DONE%20lang:go\u0026ss\u003dchromium",
      "parentUuid": "69ff6a24_ae46be07",
      "range": {
        "startLine": 25,
        "startChar": 7,
        "endLine": 25,
        "endChar": 20
      },
      "revId": "0d63b0d8475f03ebf42ccf8d5dd3710039ce9e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0d63b0d8475f03ebf42ccf8d5dd3710039ce9e1f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0d63b0d8475f03ebf42ccf8d5dd3710039ce9e1f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0d63b0d8475f03ebf42ccf8d5dd3710039ce9e1f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}