{
  "comments": [
    {
      "key": {
        "uuid": "1b1f0903_9265b38e",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 464,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-03-12T17:55:43Z",
      "side": 1,
      "message": "dimensions",
      "range": {
        "startLine": 464,
        "startChar": 6,
        "endLine": 464,
        "endChar": 16
      },
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95f62b58_21d50e28",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 464,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-03-13T02:04:27Z",
      "side": 1,
      "message": "Thanks. made a CL crrev.com/c/2100831",
      "parentUuid": "1b1f0903_9265b38e",
      "range": {
        "startLine": 464,
        "startChar": 6,
        "endLine": 464,
        "endChar": 16
      },
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76aafca0_643d413d",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-03-12T17:55:43Z",
      "side": 1,
      "message": "This change still carries the drawback than \u0027bot_connected\u0027 rows in BigQuery still don\u0027t have the right dimensions. :/\n\nMaybe we should have a \u0027bot_connecting\u0027 and \u0027bot_connected\u0027 ? Here we\u0027d replace with \u0027bot_connecting\u0027, then with some magic in first poll it\u0027d register a \u0027bot_connected\u0027. wdyt?\n\nTo be clear, my concern here is to make efficiency analysis better for devices (android, chromeos, etc), where the device\u0027s dimensions will not be set correctly here (sadly) because the injected script is not yet there.",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6458b50f_a975d564",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-03-13T02:04:27Z",
      "side": 1,
      "message": "\u003e Maybe we should have a \u0027bot_connecting\u0027 and \u0027bot_connected\u0027 ? Here we\u0027d replace with \u0027bot_connecting\u0027, then with some magic in first poll it\u0027d register a \u0027bot_connected\u0027. wdyt?\n\n\u0027bot_connecting\u0027/\u0027bot_connected\u0027 makes sense to me.\n\nI\u0027m not sure though, \u0027how\u0027 to implement the magic with the first poll simply on the serverside.\n(Check the recent events to see if it\u0027s the \u0027first\u0027 poll...?)\n\nThe solution would be to change the bot code to include \"is_first\" flag in the first polling,\nso that the server can store the \u0027bot_connected\u0027 if the flag is True.\nwdyt?\n\nTo be clear, the issue existed before I started change the dimensions registrations, and this is an improvement for analysis. right?",
      "parentUuid": "76aafca0_643d413d",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4693fe13_1c29f77d",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-03-13T16:23:56Z",
      "side": 1,
      "message": "Observations:\n- BotEvent is an immutable entity.\n- As such, it\u0027s safe to cache BotEvent in memcache.\n- Which means that a BotEvent GET by key is super fast.\n- Right now during /poll, the result is stored (\"request_sleep\", \"request_task\", \"request_update\") instead of \"bot_poll\".\n\n\nProposal:\n- In /handshake, set a memcache key \"\u003cbotid\u003e\" set to True in namespace \"bot_just_connected\"\n- In /poll, if memcache value is set to True:\n  - Trigger a \"bot_connected\" bot event.\n- If set to False:\n  - No-op (as current)\n- If unset (to take in account memcache flush):\n  - Slow code path to query last BotEvent if it\u0027s a \"bot_connecting\", do the \"bot_connected\" event if necessary and set to False.\n\nThe thing is that the slow code path would be very rare, and not that costly. It\u0027s really just a memcache lookup in practice, which is reasonably fast.",
      "parentUuid": "6458b50f_a975d564",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b67a5f26_afed2129",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-03-16T01:53:27Z",
      "side": 1,
      "message": "I see.\n\nWhat\u0027s the advantage of the serverside solution with memcache over the client side solution with a flag like \u0027bot_connected\u003dTrue\u0027?\n\n\u003e If unset (to take in account memcache flush):\n  - Slow code path to query last BotEvent if it\u0027s a \"bot_connecting\", do the \"bot_connected\" event if necessary and set to False.\n\nThere can be \u0027bot_hook_log\u0027 events between /handshake and the first /poll requests...\nSo I concern that it will become complicated to do this.\n(Checking events within past xx minutes would work, but not preferable.)",
      "parentUuid": "4693fe13_1c29f77d",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd614fb_ca7150e8",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2020-03-16T13:45:36Z",
      "side": 1,
      "message": "\u003e What\u0027s the advantage of the serverside solution with memcache over the client side solution with a flag like \u0027bot_connected\u003dTrue\u0027?\n\nTrust and internal consistency. Having the bot control this could leave an attacking bot the ability to leaving inconsistent messages.",
      "parentUuid": "b67a5f26_afed2129",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec7d77d_b6d12443",
        "filename": "appengine/swarming/handlers_bot.py",
        "patchSetId": 11
      },
      "lineNbr": 466,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-03-16T23:57:38Z",
      "side": 1,
      "message": "\u003e Having the bot control this could leave an attacking bot the ability to leaving inconsistent messages.\n\nI see. this is true.\nLet me consider based on your proposal.\n\nFiled a bug crbug.com/1062119 for this issue.",
      "parentUuid": "8cd614fb_ca7150e8",
      "revId": "a1bebe6db0b7e3a896fe4c686476e5f002990c43",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}